{"version":3,"file":"static/js/22.8c3d888a.chunk.js","mappings":"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","sources":["components/loader/loader.jsx","components/OurFriends/OurFriends.styled.js","components/OurFriends/WorkDays/WorkTime.styled.js","components/OurFriends/WorkDays/WorkTime.jsx","components/OurFriends/Card/Card.styled.js","components/OurFriends/Card/Card.jsx","components/OurFriends/OurFriends.jsx","pages/OurFriendsPage/OurFriendsPage.styled.js","pages/OurFriendsPage/OurFriendsPage.jsx","utils/api/getUserData.js"],"sourcesContent":["import React from 'react';\n\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst Loader = ({ size = 100 }) => {\n  return <ClipLoader size={size} color=\"#000\" />;\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { theme } from '../../theme';\n\nexport const FriendsList = styled.ul`\n  margin: 0 auto;\n  justify-content: center;\n\n  @media screen and (${theme.media.tablet}) {\n    display: grid;\n    grid-template-columns: repeat(2, 336px);\n    grid-gap: 32px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    display: grid;\n    grid-template-columns: repeat(3, 395px);\n    grid-gap: 32px;\n\n  }\n`;\n\n","import styled from 'styled-components';\nimport { theme } from '../../../theme';\n\nexport const ScheduleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background-color: #ffffff;\n  border: 1px solid #f59256;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  padding: 12px;\n  margin-top: 3px;\n`;\n\nexport const ScheduleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-right: 12px;\n`;\n\nexport const WorkingDay = styled.p`\n  font-weight: ${theme.fontWeights.middle};\n  font-size: ${theme.fontSizes.xs};\n  line-height: 1.33;\n  \n`;\n\nexport const CurrentDay = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.middle};\n  color: ${theme.colors.black};\n  line-height: ${theme.lineHeights.heading};\n  padding-bottom: 4px;\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.38;\n\n    padding-bottom: 8px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.3;\n    padding-bottom: 12px;\n  }\n`;\n\nexport const Button = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.middle};\n  color: ${theme.colors.black};\n  line-height: ${theme.lineHeights.heading};\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.38;\n\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.3;\n  }\n`;\n","import { useState } from 'react';\nimport { Popover2 } from '@blueprintjs/popover2';\n\nimport {\n  ScheduleBox,\n  Button,\n  WorkingDay,\n  ScheduleContainer,\n  CurrentDay,\n} from './WorkTime.styled';\n\nexport const WorkTime = ({ workDays }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // console.log(workDays);\n\n  const DAYS_OF_WEEK = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  const currentDayIndex = new Date().getDay();\n\n  const handleInteraction = nextOpenState => {\n    setIsOpen(nextOpenState);\n  };\n\n  return (\n    <>\n      <Popover2\n        content={\n          <ScheduleBox>\n            {workDays &&\n              workDays.length > 0 &&\n              DAYS_OF_WEEK.map((day, index) => (\n                <ScheduleContainer key={index}>\n                  <div>\n                    <WorkingDay>{day}</WorkingDay>\n                  </div>\n                  <div>\n                    <WorkingDay>\n                      {workDays[index]?.isOpen\n                        ? `${workDays[index].from} - ${workDays[index].to}`\n                        : 'Closed'}\n                    </WorkingDay>\n                  </div>\n                </ScheduleContainer>\n              ))}\n          </ScheduleBox>\n        }\n        interactionKind=\"click\"\n        isOpen={isOpen}\n        onInteraction={nextOpenState => handleInteraction(nextOpenState)}\n        placement=\"bottom-start\"\n      >\n        <Button type=\"button\">Time:</Button>\n      </Popover2>\n      <CurrentDay>\n        {workDays && workDays[currentDayIndex]?.isOpen\n          ? `${workDays[currentDayIndex].from} - ${workDays[currentDayIndex].to}`\n          : 'Closed'}\n      </CurrentDay>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../theme';\n\nexport const FriendsItem = styled.li`\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n\n  transition: transform 0.3s ease-in-out 0s;\n  \n  @media screen and (${theme.media.mobile}) {\n    width: 280px;\n    margin-left: auto;\n    margin-right: auto;\n\n    &:not(:last-child) {\n      margin-bottom: 12px;\n    }\n  }\n\n  @media screen and (${theme.media.tablet}) {\n    width: 336px;\n\n    &:nth-last-child(-n + 2) {\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    width: 395px;\n  }\n`;\n\nexport const FriendsWrapper = styled.div`\n  display: flex;\n  padding: 10px 4px;\n\n  @media screen and (${theme.media.tablet}) {\n    padding: 16px 4px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    padding: 16px 4px;\n  }\n`;\n\nexport const FriendsTitle = styled.h3`\n  padding-top: 14px;\n  text-align: center;\n  color: ${theme.colors.accent};\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.bold};\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.38;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.mx};\n    line-height: 1.35;\n  }\n`;\n\nexport const FriendsLinkToAddress = styled.a`\n  text-decoration: underline;\n  \n  color: ${theme.colors.accent};\n`;\n\nexport const FriendsLinkToContacts = styled.a`\n  text-decoration: none;\n  color: ${theme.colors.primeText};\n\n  &:hover {\n    color: ${theme.colors.accent};\n  };\n`;\n\nexport const FriendsAddress = styled.span`\n  text-decoration: underline;\n  position: relative;\n  color: ${theme.colors.black};\n`;\n\nexport const FriendsPar = styled.h4`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.middle};\n  color: ${theme.colors.black};\n  line-height: ${theme.lineHeights.heading};\n\n  &:not(:last-child) {\n    padding-bottom: 4px;\n  }\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.38;\n\n    &:not(:last-child) {\n      padding-bottom: 8px;\n    }\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.3;\n\n    &:not(:last-child) {\n      padding-bottom: 12px;\n    }\n  }\n`;\n\nexport const FriendsLogoWrapper = styled.div`\n  margin-right: 12px;\n\n  @media screen and (${theme.media.tablet}) {\n    margin-right: 14px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    margin-right: 16px;\n  }\n`;\n\nexport const FriendsImg = styled.img`\n  object-fit: cover;\n  max-width: fit-content;\n  width: 110px;\n\n  @media screen and (${theme.media.tablet}) {\n    width: 120px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    width: 158px;\n  }\n`;\n","import { WorkTime } from '../WorkDays/WorkTime';\n\nimport {\n  FriendsItem,\n  FriendsTitle,\n  FriendsLinkToAddress,\n  FriendsLinkToContacts,\n  FriendsPar,\n  FriendsWrapper,\n  FriendsLogoWrapper,\n  FriendsImg,\n  FriendsAddress,\n} from './Card.styled';\n\nexport const Card = ({ friends }) => {\n  return (\n    <>\n      {friends.map(\n        ({\n          _id,\n          title,\n          url,\n          addressUrl,\n          address,\n          imageUrl,\n          workDays,\n          phone,\n          email,\n        }) => (\n          <FriendsItem key={_id}>\n            <FriendsTitle>\n              <FriendsLinkToAddress href={url}>{title}</FriendsLinkToAddress>\n            </FriendsTitle>\n            <FriendsWrapper>\n              <FriendsLogoWrapper>\n                <FriendsImg\n                  src={\n                    imageUrl\n                      ? imageUrl\n                      : 'https://animals-city.org/wp-content/themes/animals-city/img/logo.svg'\n                  }\n                  alt={title}\n                />\n              </FriendsLogoWrapper>\n              <div>\n                <WorkTime workDays={workDays} />\n                <FriendsPar>\n                  Address:\n                  <br />\n                  <a href={addressUrl} target=\"_blank\" rel=\"noreferrer\">\n                    {address ? (\n                      <FriendsAddress>{address}</FriendsAddress>\n                    ) : (\n                      <hr />\n                    )}\n                  </a>\n                </FriendsPar>\n                <FriendsPar type=\"email\">\n                  Email:\n                  <br />\n                  {email ? (\n                    <FriendsLinkToContacts href=\"mailto:{address}\">\n                      {email}\n                    </FriendsLinkToContacts>\n                  ) : (\n                    <hr />\n                  )}\n                </FriendsPar>\n                <FriendsPar type=\"phone\">\n                  Phone:\n                  <br />\n                  {phone ? (\n                    <FriendsLinkToContacts href=\"tel:{phone}\">\n                      {phone}\n                    </FriendsLinkToContacts>\n                  ) : (\n                    <hr />\n                  )}\n                </FriendsPar>\n              </div>\n            </FriendsWrapper>\n          </FriendsItem>\n        )\n      )}\n    </>\n  );\n};\n","import { FriendsList } from './OurFriends.styled';\nimport { Card } from './Card/Card';\n\nexport const OurFriends = ({ friends }) => {\n  if (!Array.isArray(friends)) {\n    return null;\n  }\n\n  // console.log(friends);\n\n  return (\n    <FriendsList>\n      <Card friends={friends} />\n    </FriendsList>\n  );\n};","import styled from 'styled-components';\nimport { theme } from '../../theme';\n\nexport const FriendsPageBody = styled.section`\n  margin-bottom: 100px;\n  margin-top: 40px;\n  \n\n  @media screen and (${theme.media.tablet}) {\n    margin-top: 90px;\n    \n  }\n\n  @media screen and (${theme.media.desktop}) {\n    margin-top: 60px;\n   \n  }\n`;\n\nexport const FriendsTitle = styled.h1`\n  text-align: center;\n  font-size: ${theme.fontSizes.ml};\n  font-weight: ${theme.fontWeights.bold};\n  line-height: ${theme.lineHeights.heading};\n\n  margin-bottom: 28px;\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.xxm};\n    line-height: 1.38;\n\n    margin-bottom: 40px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.xxm};\n    line-height: 1.38;\n\n    margin-bottom: 60px;\n  }\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n\n`;\n","import { useEffect, useState } from 'react';\nimport { getFriends } from '../../utils/api/getUserData';\nimport { OurFriends } from '../../components/OurFriends/OurFriends';\nimport { FriendsPageBody, FriendsTitle } from './OurFriendsPage.styled';\n\nimport Loader from '../../components/loader/loader';\nimport { LoaderContainer } from './OurFriendsPage.styled';\n\nconst OurFriendsPage = () => {\n  const [friends, setFriends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // console.log(friends)\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setIsLoading(true);\n        const response = await getFriends();\n        setFriends(response);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetch();\n  }, []);\n\n  return (\n    <FriendsPageBody>\n      <FriendsTitle>Our Friends</FriendsTitle>\n      {isLoading ? (\n        <LoaderContainer>\n          <Loader />\n        </LoaderContainer>\n      ) : (\n        <OurFriends friends={friends} />\n      )}\n    </FriendsPageBody>\n  );\n};\n\nexport default OurFriendsPage;\n","import axios from 'axios';\n\nexport const fetchUserData = async token => {\n  const response = await axios.get(`api/auth/currentUser`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data.user;\n};\n\nexport const updateUserData = async (token, credentials) => {\n  const response = await axios.patch(`api/auth/updateUser`, credentials, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data.user;\n};\n\nexport const getUserPets = async token => {\n  const response = await axios.get(`api/pets/allUserPets`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data;\n};\n\nexport const removeUserPets = async (token, id) => {\n  const response = await axios.delete(`api/pets/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFriends = async () => {\n  const response = await axios.get('/friends');\n\n  return response.data;\n}"],"names":["size","color","FriendsList","styled","theme","ScheduleBox","ScheduleContainer","WorkingDay","CurrentDay","Button","WorkTime","workDays","useState","isOpen","setIsOpen","currentDayIndex","Date","getDay","content","length","map","day","index","from","to","interactionKind","onInteraction","nextOpenState","handleInteraction","placement","type","FriendsItem","FriendsWrapper","FriendsTitle","FriendsLinkToAddress","FriendsLinkToContacts","FriendsAddress","FriendsPar","FriendsLogoWrapper","FriendsImg","Card","friends","_id","title","url","addressUrl","address","imageUrl","phone","email","href","src","alt","target","rel","OurFriends","Array","isArray","FriendsPageBody","LoaderContainer","setFriends","isLoading","setIsLoading","useEffect","getFriends","response","console","log","message","fetch","fetchUserData","token","axios","headers","Authorization","data","user","updateUserData","credentials","getUserPets","removeUserPets","id"],"sourceRoot":""}