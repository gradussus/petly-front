{"version":3,"file":"static/js/604.4846ebc6.chunk.js","mappings":"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","sources":["components/RegLog/AuthForm/AuthForm.styled.js","components/RegLog/AuthForm/AuthForm.jsx","components/RegLog/LoginPage/Buttons/Buttons.styled.js","components/RegLog/LoginPage/Buttons/Buttons.jsx","components/RegLog/LoginPage/Input/Input.styled.js","components/RegLog/LoginPage/Input/Input.jsx","components/RegLog/LoginPage/RedirectLink/RedirectLink.styled.js","components/RegLog/RegisterPage/ErrorMessages/ErrorMessages.styled.js","components/RegLog/RegisterPage/ErrorMessages/ErrorMessages.jsx","components/RegLog/LoginPage/RedirectLink/RedirectLink.jsx","components/RegLog/LoginPage/Shema.js","components/RegLog/LoginPage/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../../theme';\nimport { Form } from 'formik';\n\nexport const AuthForm = styled(Form)`\n\nmargin-left:auto;\nmargin-right:auto;\n/* margin-top: 12px; */\n\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n\n  padding: 0px;\n  border-radius: ${theme.radii.large};\n  background: transparent;\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 60px 80px;\n\n\n    /* margin-top: 134px; */\n    background: ${theme.colors.white};\n\n    width: 608px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n\n@media screen and (min-width: 1280px){\n    /* margin-top: 60px; */\n\n    width: 620px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 40px;\n\n  font-family: ${theme.fonts.body};\n  font-weight: ${theme.fontWeights.middle};\n  font-size: ${theme.fontSizes.l};\n  line-height: 49px;\n  letter-spacing: 0.04em;\n`;\n","import * as SC from './AuthForm.styled';\n\nexport const AuthForm = ({title, children}) => {\n\n    return (\n      <SC.AuthForm autoComplete='off'>\n      <SC.Title>{title}</SC.Title>\n        {children}\n      </SC.AuthForm>\n    );\n  };\n  ","import styled from 'styled-components';\nimport { theme } from '../../../../theme';\n\nexport const AccentButton = styled.button`\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.mx};\n  width: 100%;\n  border-radius: ${theme.radii.large};\n  padding: 10px;\n  border: ${theme.borders.large};\n  background: ${theme.colors.accent};\n  color: ${theme.colors.accentText};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const TransparentButton = styled(AccentButton)`\n  background: ${theme.colors.background};\n  color: ${theme.colors.secondaryText};\n  margin-top: 16px;\n`;\n\nexport const NextBtn = styled(AccentButton)``;\n","import * as SC from './Buttons.styled';\n\nexport const AccentButton = (props) => {\n  return <SC.AccentButton  {...props} />;\n};\n\nexport const TransparentButton = (props) => {\n    return <SC.TransparentButton {...props} />;\n  };\n\nexport const NextBtn = (props) => {\n  return <SC.NextBtn {...props}/>\n}","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  box-sizing: border-box;\n  margin-left:auto;\n  margin-right:auto;\n  border-radius: ${theme.radii.large};\n  padding: 12px 32px;\n  border: ${theme.borders.normal};\n  background: ${theme.colors.background};\n  color: ${theme.colors.primeText};\n  &:focus-visible {\n  outline: none;\n  }\n`;","import * as SC from './Input.styled';\n\nexport const Input = (props) => {\n  return <SC.Input type=\"text\" {...props} />;\n};","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display:flex;\n  margin-top: 40px;\n`\n\nexport const RedirectLink = styled(Link)`\n  text-decoration: underline;\n  color:${theme.colors.secondary};\n  \n  &:hover{\n    color:  ${theme.colors.accent};\n}\n` \nexport const TextBeforeLink = styled.p`\n  margin-right: 5px;\n  color:rgba(17, 17, 17, 0.6);\n`","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\n\nexport const ErrorWrapper = styled.div`\n    width: 100%;\n    position: relative;\n\n    margin-bottom: 40px;\n\n`\nexport const Border = styled.div`\n    width: 100%;\n    height: 50px;\n    border: 2px #E2001A solid;\n    border-radius: ${theme.radii.large};\n    position: absolute;\n    top: 0px;\n    right: 0px;\n\n`\n\nexport const ErrorMessages = styled.div`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    text-align:start;\n    color: #E2001A;\n    position: absolute;\n    z-index: 999;\n    top: 55px;\n    right: -32px;\n    width: 100%;\n    margin-right: auto;\n`\n","import * as SC from './ErrorMessages.styled';\n\nexport const ErrorMessages = (props) => {\n  return (\n  <>\n  {/* <SC.Border/> */}\n  <SC.ErrorMessages  {...props} />\n  \n  </>)\n};\n\nexport const ErrorWrapper = (props) => {\n  return <SC.ErrorWrapper  {...props} />\n};\n\n","import * as SC from './RedirectLink.styled'\n\nexport const RedirectLink = () => {\n  return <SC.Wrapper>\n  <SC.TextBeforeLink>Don't have an account?</SC.TextBeforeLink>\n  <SC.RedirectLink to='/register'>Register</SC.RedirectLink>\n  </SC.Wrapper>\n};\n","import { object, string } from 'yup';\nconst emailRegexp =\n  /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst passwordRegexp = /^[a-zA-Z0-9а-яА-Я]+$/;\n\nexport const LoginValidation = object().shape({\n  email: string()\n    .required('Please Enter your email')\n    .matches(emailRegexp, 'Enter your email <example@mail.com>'),\n  password: string()\n    .required('Please Enter your password')\n    .min(7, \"Password's length min 7, max 32, without spaces\")\n    .max(32, \"Password's length min 7, max 32, without spaces\")\n    .matches(passwordRegexp, \"Password's length min 7, max 32, without spaces\"),\n});\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../../../hooks/useAuth';\nimport { toast } from 'react-toastify';\nimport { userLogIn } from '../../../redux/auth/operations';\n\nimport { Input } from './Input/Input';\nimport { AccentButton } from './Buttons/Buttons';\nimport { AuthForm } from 'components/RegLog/AuthForm/AuthForm';\nimport { RedirectLink } from 'components/RegLog/LoginPage/RedirectLink/RedirectLink';\nimport { Formik, ErrorMessage } from 'formik';\nimport { ErrorMessages, ErrorWrapper } from '../RegisterPage/ErrorMessages/ErrorMessages';\nimport { LoginValidation } from './Shema';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const { error } = useAuth();\n\n  const handleLogin = values => {\n    dispatch(userLogIn(values));\n  };\n\n  useEffect(() => {\n    if (error) toast.error(`${error}`, { theme: 'colored' });\n  }, [error]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    handleLogin(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={LoginValidation}\n      handleSubmit\n    >\n      <AuthForm title=\"Login\" onSubmit={handleSubmit}>\n        <ErrorWrapper>\n          <Input placeholder=\"Email\" type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component={ErrorMessages} />\n        </ErrorWrapper>\n\n        <ErrorWrapper>\n          <Input placeholder=\"Password\" type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component={ErrorMessages} />\n        </ErrorWrapper>\n\n        <AccentButton type=\"submit\">Login</AccentButton>\n        <RedirectLink onClick={() => handleSubmit} />\n      </AuthForm>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/RegLog/LoginPage/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["AuthForm","styled","Form","theme","Title","title","children","autoComplete","AccentButton","TransparentButton","props","Input","Field","type","Wrapper","RedirectLink","Link","TextBeforeLink","ErrorWrapper","ErrorMessages","to","LoginValidation","object","shape","email","string","required","matches","password","min","max","initialValues","LoginForm","dispatch","useDispatch","error","useAuth","useEffect","toast","handleSubmit","values","resetForm","userLogIn","handleLogin","onSubmit","validationSchema","I","placeholder","name","component","onClick"],"sourceRoot":""}