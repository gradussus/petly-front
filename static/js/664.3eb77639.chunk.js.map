{"version":3,"file":"static/js/664.3eb77639.chunk.js","mappings":"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","sources":["components/RegLog/AuthForm/AuthForm.styled.js","components/RegLog/AuthForm/AuthForm.jsx","components/RegLog/LoginPage/Buttons/Buttons.styled.js","components/RegLog/LoginPage/Buttons/Buttons.jsx","components/RegLog/LoginPage/Input/Input.styled.js","components/RegLog/LoginPage/Input/Input.jsx","components/RegLog/LoginPage/RedirectLink/RedirectLink.styled.js","components/RegLog/RegisterPage/ErrorMessages/ErrorMessages.styled.js","components/RegLog/RegisterPage/ErrorMessages/ErrorMessages.jsx","components/RegLog/RegisterPage/RedirectLink/RedirectLink.jsx","components/RegLog/RegisterPage/Shema.js","components/RegLog/RegisterPage/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../../theme'\nimport { Form } from 'formik';\n\nexport const AuthForm = styled(Form)`\n\nmargin-left:auto;\nmargin-right:auto;\nmargin-top: 12px;\n\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n\npadding: 0px;\nborder-radius: ${theme.radii.large};\nbackground: transparent;\n\ntext-align: center;\n\n@media screen and (min-width: 768px){\npadding: 60px 80px;\n\n    margin-top: 134px;\n    background: ${theme.colors.white};\n    width: 608px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n}\n\n@media screen and (min-width: 1280px){\n    margin-top: 60px;\n    width: 620px;\n\n}\n\n `;\n\nexport const Title = styled.h3`\nmargin-bottom: 40px;\n\nfont-family: ${theme.fonts.body};\nfont-weight: ${theme.fontWeights.middle};\nfont-size: ${theme.fontSizes.l};\nline-height: 49px;\nletter-spacing: 0.04em;\n`","import * as SC from './AuthForm.styled';\n\nexport const AuthForm = ({title, children}) => {\n\n    return (\n      <SC.AuthForm autoComplete='off'>\n      <SC.Title>{title}</SC.Title>\n        {children}\n      </SC.AuthForm>\n    );\n  };\n  ","import styled from 'styled-components';\nimport { theme } from '../../../../theme';\n\nexport const AccentButton = styled.button`\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.mx};\n  width: 100%;\n  border-radius: ${theme.radii.large};\n  padding: 10px;\n  border: ${theme.borders.large};\n  background: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const TransparentButton = styled(AccentButton)`\n  background: ${theme.colors.background};\n  color: ${theme.colors.black};\n  margin-top: 16px;\n`;\n\nexport const NextBtn = styled(AccentButton)``;\n","import * as SC from './Buttons.styled';\n\nexport const AccentButton = (props) => {\n  return <SC.AccentButton  {...props} />;\n};\n\nexport const TransparentButton = (props) => {\n    return <SC.TransparentButton {...props} />;\n  };\n\nexport const NextBtn = (props) => {\n  return <SC.NextBtn {...props}/>\n}","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  box-sizing: border-box;\n  margin-left:auto;\n  margin-right:auto;\n  border-radius: ${theme.radii.large};\n  margin-bottom: 40px;\n  padding: 12px 32px;\n  border: ${theme.borders.normal};\n  background: ${theme.colors.background};\n  color: ${theme.colors.primeText};\n`;","import * as SC from './Input.styled';\n\nexport const Input = (props) => {\n  return <SC.Input type=\"text\" {...props} />;\n};","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display:flex;\n  margin-top: 40px;\n`\n\nexport const RedirectLink = styled(Link)`\n  text-decoration: underline;\n  color:${theme.colors.secondary};\n  \n  &:hover{\n    color:  ${theme.colors.accent};\n}\n` \nexport const TextBeforeLink = styled.p`\n  margin-right: 5px;\n  color:rgba(17, 17, 17, 0.6);\n`","import styled from 'styled-components';\n\nexport const ErrorMessages = styled.div`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    color: #E2001A;\n\n    position: relative;\n    top: -35px;\n    right: -20px;\n    margin-right: auto;\n\n`\n","import * as SC from './ErrorMessages.styled';\n\nexport const ErrorMessages = (props) => {\n  return <SC.ErrorMessages  {...props} />;\n};\n","import * as SC from '../../LoginPage/RedirectLink/RedirectLink.styled'\n\nexport const RedirectLink = () => {\n    return <SC.Wrapper>\n    <SC.TextBeforeLink>Already have an account?</SC.TextBeforeLink>\n    <SC.RedirectLink to='/login'>Login</SC.RedirectLink>\n    </SC.Wrapper>\n  };","import { object, string, ref } from \"yup\";\n\nconst nameRegexp = /^[a-zA-Zа-яА-ЯіІїЇґҐ]+(?: [a-zA-Zа-яА-ЯіІїЇґҐ]+)*$/;\nconst emailRegexp =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nconst passwordRegexp = /^[a-zA-Z0-9а-яА-Я]+$/;\nconst phoneRegexp = /^\\+380\\d{9}$/;\nconst cityRegexp = /^[а-яёіїєА-ЯЁІЇЄA-Za-z]+,?\\s[а-яёіїєА-ЯЁІЇЄA-Za-z]+$/;\n\nexport const RegisterValidation = object().shape({\n    email: string()\n      .required(\"Please Enter your email\")\n      .matches(\n        emailRegexp,\n        \"Enter your email <example@mail.com>\"\n      ),\n    password:\n    string()\n    .required('Please Enter your password')\n    .min(7)\n    .max(32)\n    .matches(\n      passwordRegexp,\n      \"Password's length min 7, max 32, without spaces\"\n    ),\n    confirmPassword: string()\n    .required(\"Please confirm your password\")\n    .oneOf([ref(\"password\")], \"Passwords do not match\"),\n\n    name: string().required(\"Name is Required\").matches(\n        nameRegexp,\n        \"Please enter valid name\"\n      ),\n    phone:string()\n    .required('Phone is required')\n    .matches(\n      phoneRegexp,\n      'Enter in format \"+380XXXXXXXXX'\n    ),\n    city: string()\n    .required('City is required')\n    .matches(\n      cityRegexp,\n      'Enter your city, region'\n    ),\n\n  });\n\n\n\nexport const FisrtStepShema = object().shape({\n  email: string()\n    .required(\"Please Enter your email\")\n    .matches(\n      emailRegexp,\n      \"Enter your email <example@mail.com>\"\n    ),\n  password:\n  string()\n  .required('Please Enter your password')\n  .min(7)\n  .max(32)\n  .matches(\n    passwordRegexp,\n    \"Password's length min 7, max 32, without spaces\"\n  ),\n  confirmPassword: string()\n  .required(\"Please confirm your password\")\n  .oneOf([ref(\"password\")], \"Passwords do not match\"),\n\n});\n\nexport const SecondStepShema = object().shape({\n      name: string().required(\"Name is Required\").matches(\n          nameRegexp,\n          \"Please enter valid name\"\n        ),\n      phone:string()\n      .required('Phone is required')\n      .matches(\n        phoneRegexp,\n        'Enter in format \"+380XXXXXXXXX'\n      ),\n      city: string()\n      .required('City is required')\n      .matches(\n        cityRegexp,\n        'Enter your city, region'\n      )\n\n});\n\n// export const FisrtStepShema = object().shape({\n//       email: string()\n//         .required(\"Please Enter your email\")\n//         .matches(\n//           emailRegexp,\n//           \"Enter your email <example@mail.com>\"\n//         ),\n//       password:\n//       string()\n//       .required('Please Enter your password')\n//       .min(7)\n//       .max(32)\n//       .matches(\n//         passwordRegexp,\n//         \"Password's length min 7, max 32, without spaces\"\n//       ),\n//       confirmPassword: string()\n//       .required(\"Please confirm your password\")\n//       .oneOf([ref(\"password\")], \"Passwords do not match\"),\n      \n  \n//     });\n\n//   export const SecondStepShema = object.shape({\n//       name: string().required(\"Name is Required\").matches(\n//           nameRegexp,\n//           \"Please enter valid name\"\n//         ),\n//       phone:string()\n//       .required('Phone is required')\n//       .matches(\n//         phoneRegexp,\n//         'Enter in format \"+380XXXXXXXXX'\n//       ),\n//       city: string()\n//       .required('City is required')\n//       .matches(\n//         cityRegexp,\n//         'Enter your city, region'\n//       )\n//   })","import { Formik, ErrorMessage } from 'formik';\nimport { ErrorMessages } from './ErrorMessages/ErrorMessages';\nimport { useNavigate } from 'react-router-dom';\nimport { registerNewUser } from '../../../redux/auth/operations';\nimport { useAuth } from '../../../hooks/useAuth';\nimport { toast } from 'react-toastify';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from '../LoginPage/Input/Input'\nimport { AccentButton, TransparentButton } from '../LoginPage/Buttons/Buttons';\nimport { AuthForm }  from 'components/RegLog/AuthForm/AuthForm';\nimport { RedirectLink } from 'components/RegLog/RegisterPage/RedirectLink/RedirectLink';\nimport { useState } from 'react';\nimport { FisrtStepShema, SecondStepShema } from './Shema';\n\n\nlet initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  city: '',\n  phone: '+380'\n};\n\n\nexport const RegisterForm = () => {\n  const { error } = useAuth();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(0);\n\n  const handleSubmit = ({email, password, city, phone, name}, { resetForm }) => {\n    dispatch(registerNewUser({email, password, city, phone, name}));\n\n    navigate('/user');\n    resetForm();\n  };\n\n  const firstHandleSubmit = (values) => {\n    initialValues = {...values}\n    console.log(initialValues);\n    setStep(1);\n    }\n\n  useEffect(() => {\n    if (error) toast.error(`${error}`, { theme: 'colored' });\n  }, [error]);\n\n\n  return (\n    <>\n    {step === 0 ?\n   ( <Formik initialValues={initialValues} onSubmit={firstHandleSubmit} validationSchema={FisrtStepShema}>\n\n      <AuthForm title=\"Registration\" >\n          <Input placeholder=\"Email\" type=\"email\" name=\"email\"  />\n          <ErrorMessage name='email' component={ErrorMessages}/>\n\n          <Input placeholder=\"Password\" type=\"password\" name=\"password\"/>\n          <ErrorMessage name='password'component={ErrorMessages}/>\n\n          <Input placeholder=\"Confirm Password\" type=\"password\" name=\"confirmPassword\"/>\n          <ErrorMessage name='confirmPassword' component={ErrorMessages}/>\n\n          <AccentButton type=\"submit\">Next</AccentButton>\n          <RedirectLink/>\n\n      </AuthForm> \n    </Formik>)\n        :\n    (<Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={SecondStepShema}>\n          <AuthForm title=\"Registration\" >\n            <Input placeholder=\"Name\" type=\"text\" name=\"name\"  />\n            <ErrorMessage name='name' component={ErrorMessages}/>\n\n            <Input placeholder=\"City, region\" type=\"text\" name=\"city\"  />\n            <ErrorMessage name='city' component={ErrorMessages}/>\n\n            <Input placeholder=\"Mobile phone\" type=\"tel\" name=\"phone\"  />\n            <ErrorMessage name='phone' component={ErrorMessages}/>\n\n            <AccentButton type=\"submit\">Register</AccentButton>\n            <TransparentButton type=\"submit\" onClick={() => setStep(0)}>Back</TransparentButton>\n            <RedirectLink/>\n          </AuthForm>\n        </Formik>)\n}\n        </>\n\n    );\n};\n\n\n\n\n","import { RegisterForm } from 'components/RegLog/RegisterPage/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["AuthForm","styled","Form","theme","Title","title","children","autoComplete","AccentButton","TransparentButton","props","Input","Field","type","Wrapper","RedirectLink","Link","TextBeforeLink","ErrorMessages","to","nameRegexp","emailRegexp","passwordRegexp","phoneRegexp","cityRegexp","FisrtStepShema","object","shape","email","string","required","matches","password","min","max","confirmPassword","oneOf","ref","name","phone","city","SecondStepShema","initialValues","RegisterForm","error","useAuth","dispatch","useDispatch","navigate","useNavigate","useState","step","setStep","useEffect","toast","onSubmit","values","console","log","validationSchema","I","placeholder","component","resetForm","registerNewUser","onClick"],"sourceRoot":""}