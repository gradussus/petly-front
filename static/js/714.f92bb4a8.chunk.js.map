{"version":3,"file":"static/js/714.f92bb4a8.chunk.js","mappings":"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","sources":["components/ItemPetModal/image/found.svg","components/NoticesPage/FoundPage.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.styled.js","components/ItemPetModal/image/cross2.svg","components/NoticesPage/AddNoticeButton.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.js","pages/NoticesPage/NoticesPage.styled.js","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFound(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.9167 9.66667H10.2583L10.025 9.44167C10.8417 8.49167 11.3333 7.25833 11.3333 5.91667C11.3333 2.925 8.90833 0.5 5.91667 0.5C2.925 0.5 0.5 2.925 0.5 5.91667C0.5 8.90833 2.925 11.3333 5.91667 11.3333C7.25833 11.3333 8.49167 10.8417 9.44167 10.025L9.66667 10.2583V10.9167L13.8333 15.075L15.075 13.8333L10.9167 9.66667ZM5.91667 9.66667C3.84167 9.66667 2.16667 7.99167 2.16667 5.91667C2.16667 3.84167 3.84167 2.16667 5.91667 2.16667C7.99167 2.16667 9.66667 3.84167 9.66667 5.91667C9.66667 7.99167 7.99167 9.66667 5.91667 9.66667Z\",\n    fill: \"#111111\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFound);\nexport default __webpack_public_path__ + \"static/media/found.bfca6fcedc5cfe6513c08fbd070244cf.svg\";\nexport { ForwardRef as ReactComponent };","import  found  from \"components/ItemPetModal/image/found.svg\";\nimport { Input, Found, FoundImg, Label  } from \"./NoticesPage.Style\";\n\nconst NoticeFound = () => {\n\n    return (\n        <Found>\n          <Label>\n          <Input placeholder=\"Search\"/> \n          <FoundImg src={found} alt=\"found\" />\n          </Label>\n        \n               \n      </Found>\n    )\n};\nexport default NoticeFound;","import styled from 'styled-components';\nimport { theme } from '../../theme';\n\nimport { NavLink } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\n\nconst NoticesCategoriesNavLink = styled(NavLink)`\n  font-family: ${theme.fonts.manrope};\n  font-weight: ${theme.fontWeights.middle};\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: ${theme.colors.primeText};\n  @media screen and (${theme.media.mobile}) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.357;\n    padding: 8px 28px;\n  }\n  font-size: 20px;\n  line-height: 1.35;\n  padding: 10px 28px;\n  background-color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.accent};\n  border-radius: 40px;\n  transition: background-color 200ms, color 200ms;\n  &:hover,\n  &:focus, &.active {\n    background-color: ${theme.colors.accent};\n    color: ${theme.colors.white};\n  }\n  cursor: pointer;\n`;\n\nconst elements = { NoticesCategoriesNavLink, Container };\n\nexport default elements;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCross2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.9997 22.6663V11.9997V22.6663ZM11.9997 11.9997V1.33301V11.9997ZM11.9997 11.9997H22.6663H11.9997ZM11.9997 11.9997H1.33301H11.9997Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.9997 22.6663V11.9997M11.9997 11.9997V1.33301M11.9997 11.9997H22.6663M11.9997 11.9997H1.33301\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCross2);\nexport default __webpack_public_path__ + \"static/media/cross2.aa39fd889d4f7c9c15b186d5d0949541.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from \"react\";\nimport { BtnAdd, ContainerAdd, P, TabletBtnAdd, Img } from \"./NoticesPage.Style\";\nimport  cross  from \"components/ItemPetModal/image/cross2.svg\";\n\nconst AddNoticeButton = () => {\n\n    const [windowWidth, setWindowWidth] = useState(window.screen.width);\n    useEffect(() => {\n        window.onresize = () => {setWindowWidth(window.screen.width)};\n      \n        return () => {window.onresize = false};\n    }, [windowWidth]);\n\n    return (\n        <>\n         {(windowWidth < 768) ? (<BtnAdd type=\"button\"><Img src={cross} alt=\"Cross\" />\n        <br/>Add pet</BtnAdd>): \n        (<ContainerAdd><P>Add pet</P> <TabletBtnAdd type=\"button\"><Img src={cross} alt=\"Cross\" />\n        <br/></TabletBtnAdd></ContainerAdd>\n        )}\n        </>\n       \n    )\n}\n\nexport default AddNoticeButton;","import elements from './NoticesCategoriesNav.styled';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport AddNoticeButton from 'components/NoticesPage/AddNoticeButton';\n\nconst { NoticesCategoriesNavLink, Container } = elements;\n\nfunction NoticesCategoriesNav({ onTypeChanged }) {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (pathname.includes('sell')) {\n      onTypeChanged('sell');\n    } else if (pathname.includes('lost-found')) {\n      onTypeChanged('lost-found');\n    } else if (pathname.includes('for-free')) {\n      onTypeChanged('for-free');\n    } else if (pathname.includes('own')) {\n      onTypeChanged('own');\n    } else if (pathname.includes('favorite')) {\n      onTypeChanged('favorite');\n    }\n  });\n\n  return (\n    <>\n      <Container>\n        <NoticesCategoriesNavLink\n          to=\"sell\"\n          onClick={() => onTypeChanged('sell')}\n        >\n          sell\n        </NoticesCategoriesNavLink>\n        <NoticesCategoriesNavLink\n          to=\"lost-found\"\n          onClick={() => onTypeChanged('lost-found')}\n        >\n          lost/found\n        </NoticesCategoriesNavLink>\n        <NoticesCategoriesNavLink\n          to=\"for-free\"\n          onClick={() => onTypeChanged('for-free')}\n        >\n          in good hands\n        </NoticesCategoriesNavLink>\n        <NoticesCategoriesNavLink to=\"own\" onClick={() => onTypeChanged('own')}>\n          own\n        </NoticesCategoriesNavLink>\n        <NoticesCategoriesNavLink\n          to=\"favorite\"\n          onClick={() => onTypeChanged('favorite')}\n        >\n          favorite\n        </NoticesCategoriesNavLink>\n\n        <AddNoticeButton />\n      </Container>\n    </>\n  );\n}\n\nexport default NoticesCategoriesNav;\n","import styled from 'styled-components';\nimport { theme } from '../../theme';\n\nconst Section = styled.section`\n  background-color: ${theme.colors.background};\n  height: auto;\n  padding-top: 42px ;\n  padding-bottom: 100px;\n  \n  @media screen and (${theme.media.tablet}) {\n    padding-top: 90px;\n  }\n  @media screen and (${theme.media.desktop}) {\n    padding-top: 60px;\n    padding-bottom: 200px;\n  }\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n \n  padding: 0 20px;\n    width: 320px;\n  @media screen and (${theme.media.tablet}) {\n    /* display: flex;  */\n    gap: 12px;\n    /* grid-template-columns: 1fr 130px; */\n    padding: 0 32px;\n    width: 768px;\n  }\n  @media screen and (${theme.media.desktop}) {\n    /* display: flex;  */\n    gap: 12px;\n    /* display: grid; \n    gap: 12px;\n    grid-template-columns: 1fr 130px; */\n    padding: 0 16px;\n    width: 1280px;\n  }\n`;\n\nconst elements = { Section, Container };\n\nexport default elements;\n","\nimport { \n  useState } from \"react\";\n\nimport NoticeFound from \"components/NoticesPage/FoundPage\";\nimport { Title } from \"../../components/NoticesPage/NoticesPage.Style\";\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\n// import NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\nimport elements from './NoticesPage.styled';\nimport { Helmet } from 'react-helmet';\n\nconst { Section, Container } = elements;\n\n\n\n\nconst NoticesPage = () => {\n  // const [state, setState] = useState([]) \n  // const [windowWidth, setWindowWidth] = useState(window.screen.width);\n\n  //   useEffect(() => {\n  //     window.onresize = () => {setWindowWidth(window.screen.width)};\n\n  //     return () => {window.onresize = false};\n  // }, [windowWidth]);\n  // console.log(\"windowWidth\", window.onresize)\n  // const screen = windowWidth\n  // console.log(\"screen\", screen) \n\n  //   useEffect(() => {\n  //     if(!state ) {\n  //       return\n  //     }\n  //     const fetchNotice = async () => {        \n  //       try {\n  //         const {data} = await axios.get(`${NAME_URL}`)        \n  //         setState(data)   \n  //         console.log(\"data\", state)    \n  //       } catch (error) {\n  //       }\n  //     }\n  //     fetchNotice()\n  //   }, [])\n  \nconst [type, setType] = useState('');\n function handleTypeChange(newType) {\n   setType(newType);\n }\n  return (\n    <>\n      <Section>\n        <Helmet>\n          <title>Notices</title>\n        </Helmet>\n        <Title>Find your favorite pet</Title>\n        <NoticeFound />\n        <Container>\n          <NoticesCategoriesNav onTypeChanged={handleTypeChange} />\n        </Container>\n        <NoticesCategoriesList type={type} />\n      </Section>\n      {/* <NoticesCategoriesList /> */}\n\n      {/* <ContainerBtn>\n          <Btn>\n            <BtnLost type=\"button\">lost/found</BtnLost>\n            <BtnGood type=\"button\">in good hands</BtnGood>\n            <BtnSell type=\"button\">sell</BtnSell>\n            <BtnFavorite type=\"button\">favorite ads</BtnFavorite>\n            <BtnMy type=\"button\">my ads</BtnMy>\n          </Btn>\n          {(windowWidth < 768) ? (<BtnAdd type=\"button\"><Img src={cross} alt=\"Cross\" />\n          <br/>Add pet</BtnAdd>): \n          (<ContainerAdd><P>Add pet</P> <TabletBtnAdd type=\"button\"><Img src={cross} alt=\"Cross\" />\n          <br/></TabletBtnAdd></ContainerAdd>\n          )}\n\n        </ContainerBtn> */}\n    </>\n  );\n\n};\n\n// const NoticesPage = () => {\n//   return (\n\n//   );\n// \nexport default NoticesPage;\n"],"names":["placeholder","src","found","alt","Container","styled","NoticesCategoriesNavLink","NavLink","theme","useState","window","screen","width","windowWidth","setWindowWidth","useEffect","onresize","type","cross","P","elements","onTypeChanged","pathname","useLocation","includes","to","onClick","Section","setType","Helmet","newType","NoticesCategoriesList"],"sourceRoot":""}