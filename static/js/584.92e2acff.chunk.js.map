{"version":3,"file":"static/js/584.92e2acff.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthForm.jsx","components/LoginPage/Buttons/Buttons.styled.js","components/LoginPage/Buttons/Buttons.jsx","components/LoginPage/Input/Input.styled.js","components/LoginPage/Input/Input.jsx","components/LoginPage/RedirectLink/RedirectLink.styled.js","components/RegisterPage/ErrorMessages/ErrorMessages.styled.js","components/RegisterPage/ErrorMessages/ErrorMessages.jsx","components/RegisterPage/RedirectLink/RedirectLink.jsx","components/RegisterPage/Shema.js","components/RegisterPage/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../theme'\nimport { Form } from 'formik';\n\nexport const AuthForm = styled(Form)`\n\nmargin-left:auto;\nmargin-right:auto;\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n\npadding: 60px 80px;\nborder-radius: ${theme.radii.large};\nbackground: transparent;\n\ntext-align: center;\n\n@media screen and (min-width: 768px){\n    margin-top: 200px;\n    background: ${theme.colors.white};\n    width: 608px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n}\n\n@media screen and (min-width: 1280px){\n    margin-top: 80px;\n    width: 620px;\n\n}\nmargin-top: 40px;\n\n `;\n\nexport const Title = styled.h3`\nmargin-bottom: 40px;\n\nfont-family: ${theme.fonts.body};\nfont-weight: ${theme.fontWeights.middle};\nfont-size: ${theme.fontSizes.l};\nline-height: 49px;\nletter-spacing: 0.04em;\n`","import * as SC from './AuthForm.styled';\n\nexport const AuthForm = ({title, children}) => {\n\n    return (\n      <SC.AuthForm autoComplete='off'>\n      <SC.Title>{title}</SC.Title>\n        {children}\n      </SC.AuthForm>\n    );\n  };\n \n","import styled from 'styled-components';\nimport { theme } from '../../../theme'\n\nexport const AccentButton = styled.button`\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.mx};\n  width: 100%;\n  border-radius: ${theme.radii.large};\n  padding: 10px;\n  border: ${theme.borders.large};\n  background: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  &:hover{\n    cursor: pointer;\n  }\n  \n`;\n\nexport const TransparentButton = styled(AccentButton)`\n  background: ${theme.colors.background};\n  color: ${theme.colors.black};\n  margin-top: 16px;\n`;\n\nexport const NextBtn = styled(AccentButton)``;","import * as SC from './Buttons.styled';\n\nexport const AccentButton = (props) => {\n  return <SC.AccentButton  {...props} />;\n};\n\nexport const TransparentButton = (props) => {\n    return <SC.TransparentButton {...props} />;\n  };\n\nexport const NextBtn = (props) => {\n  return <SC.NextBtn {...props}/>\n}","import styled from 'styled-components';\nimport { theme } from '../../../theme'\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  box-sizing: border-box;\n  margin-left:auto;\n  margin-right:auto;\n  border-radius: ${theme.radii.large};\n  margin-bottom: 40px;\n  padding: 12px 32px;\n  border: ${theme.borders.normal};\n  background: ${theme.colors.background};\n  color: ${theme.colors.primeText};\n`;","import * as SC from './Input.styled';\n\nexport const Input = (props) => {\n  return <SC.Input type=\"text\" {...props} />;\n};","import styled from 'styled-components';\nimport { theme } from '../../../theme'\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display:flex;\n  margin-top: 40px;\n`\n\nexport const RedirectLink = styled(Link)`\n  text-decoration: underline;\n  color:${theme.colors.secondary};\n  \n  &:hover{\n    color:  ${theme.colors.accent};\n}\n` \nexport const TextBeforeLink = styled.p`\n  margin-right: 5px;\n  color:${theme.colors.grey};\n`","import styled from 'styled-components';\n\nexport const ErrorMessages = styled.div`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    color: #E2001A;\n\n    position: relative;\n    top: -35px;\n    right: -20px;\n    margin-right: auto;\n`","import * as SC from './ErrorMessages.styled';\n\nexport const ErrorMessages = (props) => {\n  return <SC.ErrorMessages  {...props} />;\n};","import * as SC from '../../LoginPage/RedirectLink/RedirectLink.styled'\n\nexport const RedirectLink = () => {\n    return <SC.Wrapper>\n    <SC.TextBeforeLink>Already have an account?</SC.TextBeforeLink>\n    <SC.RedirectLink to='/login'>Login</SC.RedirectLink>\n    </SC.Wrapper>\n  };","import { object, string, ref } from \"yup\";\n\nexport const RegisterValidation = object().shape({\n    email: string()\n      .required(\"Valid email required\")\n      .email(\"Please set the correct email\"),\n    password: string().min(6, \"must be 6 characters long\").max(16, \"must be less than 16 characters\").required(\"Required\"),\n    confirmPassword: string()\n      .required(\"Please confirm your password\")\n      .oneOf([ref(\"password\")], \"Passwords do not match\"),\n    name: string().required(\"Name is Required\"),\n    phone:string()\n    .required('Phone is required')\n    .matches(/^\\+380\\d{9}$/, 'Must start +380 and have 12 characters'),\n    city: string().required('City is required'),\n\n  });","import React, { useEffect } from 'react';\n\nimport { Input } from '../LoginPage/Input/Input';\nimport { useDispatch } from 'react-redux';\nimport {\n  AccentButton,\n  TransparentButton,\n  NextBtn,\n} from '../LoginPage/Buttons/Buttons';\nimport { AuthForm } from 'components/AuthForm/AuthForm';\nimport { RedirectLink } from 'components/RegisterPage/RedirectLink/RedirectLink';\nimport { useState } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { ErrorMessages } from './ErrorMessages/ErrorMessages';\nimport { RegisterValidation } from './Shema';\nimport { registerNewUser } from '../../redux/auth/operations';\n\nimport { useAuth } from '../../hooks/useAuth';\nimport { toast } from 'react-toastify';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  city: '',\n  phone: '+380',\n};\n\nexport const RegisterForm = () => {\n  const [isSecondStep, setSecondStep] = useState(false);\n\n  const { error } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const handleRegistration = values => {\n    dispatch(\n      registerNewUser({\n        city: values.city,\n        email: values.email,\n        name: values.name,\n        password: values.password,\n        phone: values.phone,\n      })\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    handleRegistration(values);\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (error) toast.error(`${error}`, { theme: 'colored' });\n  }, [error]);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={RegisterValidation}\n    >\n      <AuthForm title=\"Registration\">\n        {isSecondStep ? (\n          <>\n            <Input placeholder=\"Name\" type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component={ErrorMessages} />\n\n            <Input placeholder=\"City, region\" type=\"text\" name=\"city\" />\n            <ErrorMessage name=\"city\" component={ErrorMessages} />\n\n            <Input placeholder=\"Mobile phone\" type=\"tel\" name=\"phone\" />\n            <ErrorMessage name=\"email\" component={ErrorMessages} />\n\n            <AccentButton type=\"submit\">Register</AccentButton>\n            <TransparentButton\n              type=\"button\"\n              onClick={() => setSecondStep(!isSecondStep)}\n            >\n              Back\n            </TransparentButton>\n          </>\n        ) : (\n          <>\n            <Input placeholder=\"Email\" type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component={ErrorMessages} />\n            <Input placeholder=\"Password\" type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component={ErrorMessages} />\n            <Input\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n              name=\"confirmPassword\"\n            />\n            <ErrorMessage name=\"confirmPassword\" component={ErrorMessages} />\n\n            <NextBtn onClick={() => setSecondStep(!isSecondStep)}>Next</NextBtn>\n          </>\n        )}\n        <RedirectLink />\n      </AuthForm>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterPage/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["AuthForm","styled","Form","theme","Title","title","children","autoComplete","AccentButton","TransparentButton","NextBtn","props","Input","Field","type","Wrapper","RedirectLink","Link","TextBeforeLink","ErrorMessages","to","RegisterValidation","object","shape","email","string","required","password","min","max","confirmPassword","oneOf","ref","name","phone","matches","city","initialValues","RegisterForm","useState","isSecondStep","setSecondStep","error","useAuth","dispatch","useDispatch","useEffect","toast","onSubmit","values","resetForm","registerNewUser","handleRegistration","validationSchema","I","placeholder","component","onClick"],"sourceRoot":""}