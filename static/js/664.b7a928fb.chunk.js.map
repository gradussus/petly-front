{"version":3,"file":"static/js/664.b7a928fb.chunk.js","mappings":"8LAIaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sgBAaFE,EAAAA,EAAAA,MAAAA,MASDA,EAAAA,EAAAA,OAAAA,OAaLC,EAAQH,EAAAA,GAAAA,GAAH,+JAGDE,EAAAA,EAAAA,MAAAA,KACAA,EAAAA,EAAAA,YAAAA,OACFA,EAAAA,EAAAA,UAAAA,G,UC1CFH,EAAW,SAAC,GAAuB,IAAtBK,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAE7B,OACE,UAAC,EAAD,CAAaC,aAAa,MAA1B,WACA,SAAC,EAAD,UAAWF,IACRC,IAGN,C,iICPUE,EAAeP,EAAAA,GAAAA,OAAH,mNACRE,EAAAA,EAAAA,YAAAA,KACFA,EAAAA,EAAAA,UAAAA,GAEIA,EAAAA,EAAAA,MAAAA,MAEPA,EAAAA,EAAAA,QAAAA,MACIA,EAAAA,EAAAA,OAAAA,OACLA,EAAAA,EAAAA,OAAAA,YAMEM,GAAoBR,EAAAA,EAAAA,IAAOO,EAAPP,CAAH,+EACdE,EAAAA,EAAAA,OAAAA,WACLA,EAAAA,EAAAA,OAAAA,e,IAIYF,EAAAA,EAAAA,IAAOO,EAAPP,CAAH,sB,SCrBPO,EAAe,SAACE,GAC3B,OAAO,SAAC,GAAD,UAAsBA,GAC9B,EAEYD,EAAoB,SAACC,GAC9B,OAAO,SAAC,GAAD,UAA0BA,GAClC,C,8GCJUC,GAAQV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,iSAOCE,EAAAA,EAAAA,MAAAA,MAEPA,EAAAA,EAAAA,QAAAA,OACIA,EAAAA,EAAAA,OAAAA,WACLA,EAAAA,EAAAA,OAAAA,W,UCbEQ,EAAQ,SAACD,GACpB,OAAO,SAAC,GAAD,QAAUG,KAAK,QAAWH,GAClC,C,yJCAYI,EAAUb,EAAAA,GAAAA,IAAH,8DAKPc,GAAed,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAH,yGAEfE,EAAAA,EAAAA,OAAAA,UAGIA,EAAAA,EAAAA,OAAAA,QAGDc,EAAiBhB,EAAAA,GAAAA,EAAH,6E,iICddiB,EAAejB,EAAAA,GAAAA,IAAH,iGAOZkB,EAASlB,EAAAA,GAAAA,IAAH,oLAIEE,EAAAA,EAAAA,MAAAA,OAORiB,EAASnB,EAAAA,GAAAA,IAAH,qGAONoB,EAAgBpB,EAAAA,GAAAA,IAAH,yT,UC1BboB,EAAgB,SAACX,GAC5B,OACA,iCACA,SAAC,EAAD,CAAWY,IAAKC,EAAQ,SACxB,SAAC,EAAD,KACA,SAAC,GAAD,UAAuBb,MAGxB,EAEYQ,EAAe,SAACR,GAC3B,OAAO,SAAC,GAAD,UAAsBA,GAC9B,C,8GCRYI,EAAUb,EAAAA,GAAAA,IAAH,2YAQIuB,EAMIC,EAKAC,E,oNCvBfX,EAAe,WACxB,OAAO,UAAC,KAAD,YACP,SAAC,KAAD,wCACA,SAAC,KAAD,CAAiBY,GAAG,SAApB,qBAED,E,UCGUC,GAAiBC,EAAAA,EAAAA,MAASC,MAAM,CAC3CC,OAAOC,EAAAA,EAAAA,MACJC,SAAS,2BACTF,QACAG,QAVH,mDAYI,uCAEJC,UACAH,EAAAA,EAAAA,MACCC,SAAS,8BACTG,IAAI,GACJC,IAAI,IACJH,QAlBoB,2CAoBnB,mDAEFI,iBAAiBN,EAAAA,EAAAA,MAChBC,SAAS,gCACTM,MAAM,EAACC,EAAAA,EAAAA,IAAI,aAAc,4BAIfC,GAAkBZ,EAAAA,EAAAA,MAASC,MAAM,CACxCY,MAAMV,EAAAA,EAAAA,MAASC,SAAS,oBAAoBC,QAhC/B,yJAkCT,2BAEJS,OAAMX,EAAAA,EAAAA,MACLC,SAAS,qBACTC,QAlCa,eAoCZ,kCAEFU,MAAMZ,EAAAA,EAAAA,MACLC,SAAS,oBACTC,QAvCY,+KAyCX,6B,UCjCJW,EAAgB,CAClBd,MAAO,GACPI,SAAU,GACVG,gBAAiB,GACjBI,KAAM,GACNE,KAAM,GACND,MAAO,QAGIG,EAAe,WAC1B,IAAQC,GAAUC,EAAAA,EAAAA,KAAVD,MACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAoBA,OAJAC,EAAAA,EAAAA,YAAU,WACJP,GAAOQ,EAAAA,GAAAA,MAAA,UAAeR,GAAS,CAAE5C,MAAO,WAC7C,GAAE,CAAC4C,KAEI,SAAC,IAAD,WACE,SAAC,KAAD,CACEF,cAAeA,EACfW,SAAmB,IAATJ,EAZI,SAAAK,GACxBZ,GAAa,UAAQY,GACrBJ,EAAQ,EACT,EAZoB,SAAC,EAAD,GAGf,IAFFtB,EAEC,EAFDA,MAAOI,EAEN,EAFMA,SAAUS,EAEhB,EAFgBA,KAAMD,EAEtB,EAFsBA,MAAOD,EAE7B,EAF6BA,KAC9BgB,EACC,EADDA,UAEFT,GAASU,EAAAA,EAAAA,IAAgB,CAAE5B,MAAAA,EAAOI,SAAAA,EAAUS,KAAAA,EAAMD,MAAAA,EAAOD,KAAAA,KAEzDgB,GACD,EAeWE,iBAA2B,IAATR,EAAaxB,EAAiBa,EAChDoB,kBAAkB,EAClBC,gBAAgB,EALlB,UAOE,UAAC9D,EAAA,EAAD,CAAUK,MAAM,eAAhB,UACY,IAAT+C,GACD,iCACA,UAAC,IAAD,YACA,SAACzC,EAAAoD,EAAD,CAAOC,YAAY,QAAQnD,KAAK,QAAQ6B,KAAK,WAC7C,SAAC,KAAD,CAAcA,KAAK,QAAQuB,UAAW5C,EAAAA,QAGtC,UAAC,IAAD,YACA,SAACV,EAAAoD,EAAD,CAAOC,YAAY,WAAWnD,KAAK,WAAW6B,KAAK,cACnD,SAAC,KAAD,CAAcA,KAAK,WAAWuB,UAAW5C,EAAAA,QAGzC,UAAC,IAAD,YACA,SAACV,EAAAoD,EAAD,CACEC,YAAY,mBACZnD,KAAK,WACL6B,KAAK,qBAEP,SAAC,KAAD,CAAcA,KAAK,kBAAkBuB,UAAW5C,EAAAA,QAGhD,SAAC,KAAD,CAAcR,KAAK,SAAnB,sBAGC,iCACD,UAAC,IAAD,YACA,SAACF,EAAAoD,EAAD,CAAOC,YAAY,OAAOnD,KAAK,OAAO6B,KAAK,UAC3C,SAAC,KAAD,CAAcA,KAAK,OAAOuB,UAAW5C,EAAAA,EAAe6C,GAAG,UAGvD,UAAC,IAAD,YACA,SAACvD,EAAAoD,EAAD,CAAOC,YAAY,eAAenD,KAAK,OAAO6B,KAAK,UACnD,SAAC,KAAD,CAAcA,KAAK,OAAOuB,UAAW5C,EAAAA,EAAgB6C,GAAG,UAGxD,UAAC,IAAD,YACA,SAACvD,EAAAoD,EAAD,CAAOC,YAAY,eAAenD,KAAK,MAAM6B,KAAK,WAClD,SAAC,KAAD,CAAcA,KAAK,QAAQuB,UAAW5C,EAAAA,EAAe6C,GAAG,UAGxD,SAAC,KAAD,CAAcrD,KAAK,SAAnB,uBACA,SAAC,KAAD,CAAmBA,KAAK,SAASsD,QAAS,kBAAMd,EAAQ,EAAd,EAA1C,sBAGA,SAACtC,EAAD,UAMf,ECpGD,EAJqB,WACnB,OAAO,SAAC+B,EAAD,GACR,C","sources":["components/RegLog/AuthForm/AuthForm.styled.js","components/RegLog/AuthForm/AuthForm.jsx","components/RegLog/LoginPage/Buttons/Buttons.styled.js","components/RegLog/LoginPage/Buttons/Buttons.jsx","components/RegLog/LoginPage/Input/Input.styled.js","components/RegLog/LoginPage/Input/Input.jsx","components/RegLog/LoginPage/RedirectLink/RedirectLink.styled.js","components/RegLog/RegisterPage/ErrorMessages/ErrorMessages.styled.js","components/RegLog/RegisterPage/ErrorMessages/ErrorMessages.jsx","components/RegLog/RegisterPage/RegisterForm.styled.js","components/RegLog/RegisterPage/RedirectLink/RedirectLink.jsx","components/RegLog/RegisterPage/Shema.js","components/RegLog/RegisterPage/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../../theme';\nimport { Form } from 'formik';\n\nexport const AuthForm = styled(Form)`\n\nmargin-left:auto;\nmargin-right:auto;\n\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n\n  padding: 0px;\n  border-radius: ${theme.radii.large};\n  background: transparent;\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 60px 80px;\n\n\n    background: ${theme.colors.white};\n\n    width: 608px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n\n@media screen and (min-width: 1280px){\n\n    width: 620px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 40px;\n\n  font-family: ${theme.fonts.body};\n  font-weight: ${theme.fontWeights.middle};\n  font-size: ${theme.fontSizes.l};\n  line-height: 49px;\n  letter-spacing: 0.04em;\n`;\n","import * as SC from './AuthForm.styled';\n\nexport const AuthForm = ({title, children}) => {\n\n    return (\n      <SC.AuthForm autoComplete='off'>\n      <SC.Title>{title}</SC.Title>\n        {children}\n      </SC.AuthForm>\n    );\n  };\n  ","import styled from 'styled-components';\nimport { theme } from '../../../../theme';\n\nexport const AccentButton = styled.button`\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.mx};\n  width: 100%;\n  border-radius: ${theme.radii.large};\n  padding: 10px;\n  border: ${theme.borders.large};\n  background: ${theme.colors.accent};\n  color: ${theme.colors.accentText};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const TransparentButton = styled(AccentButton)`\n  background: ${theme.colors.background};\n  color: ${theme.colors.secondaryText};\n  margin-top: 16px;\n`;\n\nexport const NextBtn = styled(AccentButton)``;\n","import * as SC from './Buttons.styled';\n\nexport const AccentButton = (props) => {\n  return <SC.AccentButton  {...props} />;\n};\n\nexport const TransparentButton = (props) => {\n    return <SC.TransparentButton {...props} />;\n  };\n\nexport const NextBtn = (props) => {\n  return <SC.NextBtn {...props}/>\n}","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  position: relative;\n  z-index:998;\n  width: 100%;\n  box-sizing: border-box;\n  margin-left:auto;\n  margin-right:auto;\n  border-radius: ${theme.radii.large};\n  padding: 12px 32px;\n  border: ${theme.borders.normal};\n  background: ${theme.colors.background};\n  color: ${theme.colors.primeText};\n  &:focus-visible {\n  outline: none;\n  }\n`;","import * as SC from './Input.styled';\n\nexport const Input = (props) => {\n  return <SC.Input type=\"text\" {...props} />;\n};","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display:flex;\n  margin-top: 40px;\n`\n\nexport const RedirectLink = styled(Link)`\n  text-decoration: underline;\n  color:${theme.colors.secondary};\n  \n  &:hover{\n    color:  ${theme.colors.accent};\n}\n` \nexport const TextBeforeLink = styled.p`\n  margin-right: 5px;\n  color:rgba(17, 17, 17, 0.6);\n`","import styled from 'styled-components';\nimport { theme } from '../../../../theme'\n\nexport const ErrorWrapper = styled.div`\n    width: 100%;\n    position: relative;\n\n    margin-bottom: 40px;\n\n`\nexport const Border = styled.div`\n    width: 100%;\n    height: 50px;\n    outline: 1px #E2001A solid;\n    border-radius: ${theme.radii.large};\n    position: absolute;\n    top: -0.5px;\n    right: 0px;\n\n`\n\nexport const Dagger = styled.img`\n    position:absolute;\n    top: 15px;\n    right: 20px;\n    z-index: 999;\n`\n\nexport const ErrorMessages = styled.div`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    text-align:start;\n    color: #E2001A;\n    position: absolute;\n    z-index: 999;\n    top: 55px;\n    right: -32px;\n    width: 100%;\n    margin-right: auto;\n`\n","import * as SC from './ErrorMessages.styled';\n\nexport const ErrorMessages = (props) => {\n  return (\n  <>\n  <SC.Dagger src={require(\"./Error-logo.png\")}/>\n  <SC.Border/>\n  <SC.ErrorMessages  {...props} />\n  \n  </>)\n};\n\nexport const ErrorWrapper = (props) => {\n  return <SC.ErrorWrapper  {...props} />\n};\n\n","import styled from 'styled-components';\nimport bgDesktop from './bg-img/bgi-desktop.png'\nimport bgTablet from './bg-img/bgi-tablet.png'\nimport bgMobile from './bg-img/bgi-mobile.png'\n// import { theme } from '../../../theme';\n\nexport const Wrapper = styled.div`\nposition:relative;\nheight:100%;\n\n width: calc(100vw+40px);\n height: calc(100vh - 88px);\n\n\nbackground-image: url(${bgMobile});\nbackground-repeat: no-repeat;\nbackground-position:bottom;\nbackground-size: contain;\n\n@media screen and (min-width: 768px){\n    background-image: url(${bgTablet});\n\n}\n\n@media screen and (min-width: 1280px){\n    background-image: url(${bgDesktop});\n\n}\n`\n// export const MobileImg = styled.img`\n//   position: absolute;\n//   display:block;\n//   width: 100vw;\n//   top: 50%;\n// left: 50%;\n// transform: translate(-50%, 0%);\n\n//   @media screen and (min-width: 767px){\n//     display:none;\n// }\n// `\n// export const TabletImg = styled.img`\n//     position: absolute;\n//     display:none;\n//   @media screen and (min-width: 768px){\n//     display:block;\n//     width: 100vw;\n//     bottom:0;\n//     right:0;\n//   }\n//   @media screen and (min-width: 1279px){\n//     display:none;\n// }\n// `\n// export const DesktopImg = styled.img`\n//     display:none;\n//     position: absolute;\n//   @media screen and (min-width: 1280px){\n//   display:block;\n//   width: 100vw;\n//   top: 50%;\n// left: 50%;\n// transform: translate(-50%, 0%);\n//   }\n// `","import * as SC from '../../LoginPage/RedirectLink/RedirectLink.styled'\n\nexport const RedirectLink = () => {\n    return <SC.Wrapper>\n    <SC.TextBeforeLink>Already have an account?</SC.TextBeforeLink>\n    <SC.RedirectLink to='/login'>Login</SC.RedirectLink>\n    </SC.Wrapper>\n  };","import { object, string, ref } from \"yup\";\n\nconst nameRegexp = /^[a-zA-Zа-яА-ЯіІїЇґҐ]+(?: [a-zA-Zа-яА-ЯіІїЇґҐ]+)*$/;\nconst emailRegexp =\n  /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst passwordRegexp = /^[a-zA-Z0-9а-яА-Я]+$/;\nconst phoneRegexp = /^\\+380\\d{9}$/;\nconst cityRegexp = /^[а-яёіїєА-ЯЁІЇЄA-Za-z]+,?\\s[а-яёіїєА-ЯЁІЇЄA-Za-z]+$/;\n\n\nexport const FisrtStepShema = object().shape({\n  email: string()\n    .required(\"Please Enter your email\")\n    .email()\n    .matches(\n      emailRegexp,\n      \"Enter your email <example@mail.com>\"\n    ),\n  password:\n  string()\n  .required('Please Enter your password')\n  .min(7)\n  .max(32)\n  .matches(\n    passwordRegexp,\n    \"Password's length min 7, max 32, without spaces\"\n  ),\n  confirmPassword: string()\n  .required(\"Please confirm your password\")\n  .oneOf([ref(\"password\")], \"Passwords do not match\"),\n\n});\n\nexport const SecondStepShema = object().shape({\n      name: string().required(\"Name is Required\").matches(\n          nameRegexp,\n          \"Please enter valid name\"\n        ),\n      phone:string()\n      .required('Phone is required')\n      .matches(\n        phoneRegexp,\n        'Enter in format \"+380XXXXXXXXX'\n      ),\n      city: string()\n      .required('City is required')\n      .matches(\n        cityRegexp,\n        'Enter your city, region'\n      )\n\n});\n\n","import { Formik, ErrorMessage } from 'formik';\nimport { ErrorMessages, ErrorWrapper } from './ErrorMessages/ErrorMessages';\nimport { registerNewUser } from '../../../redux/auth/operations';\nimport { useAuth } from '../../../hooks/useAuth';\nimport { toast } from 'react-toastify';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from '../LoginPage/Input/Input';\nimport { AccentButton, TransparentButton } from '../LoginPage/Buttons/Buttons';\nimport { AuthForm } from 'components/RegLog/AuthForm/AuthForm';\nimport { RedirectLink } from 'components/RegLog/RegisterPage/RedirectLink/RedirectLink';\nimport { useState } from 'react';\nimport { FisrtStepShema, SecondStepShema } from './Shema';\nimport { Wrapper } from './RegisterForm.styled'\n\nlet initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  city: '',\n  phone: '+380',\n};\n\nexport const RegisterForm = () => {\n  const { error } = useAuth();\n  const dispatch = useDispatch();\n  const [step, setStep] = useState(0);\n\n  const handleSubmit = (\n    { email, password, city, phone, name },\n    { resetForm }\n  ) => {\n    dispatch(registerNewUser({ email, password, city, phone, name }));\n\n    resetForm();\n  };\n\n  const firstHandleSubmit = values => {\n    initialValues = { ...values };\n    setStep(1);\n  };\n\n  useEffect(() => {\n    if (error) toast.error(`${error}`, { theme: 'colored' });\n  }, [error]);\n\n  return (<Wrapper>\n            <Formik\n              initialValues={initialValues}\n              onSubmit={step === 0 ? firstHandleSubmit : handleSubmit}\n              validationSchema={step === 0 ? FisrtStepShema : SecondStepShema}\n              validateOnChange={false}\n              validateOnBlur={false}\n            >\n              <AuthForm title=\"Registration\">\n                {step === 0 ? \n                <>\n                <ErrorWrapper>\n                <Input placeholder=\"Email\" type=\"email\" name=\"email\" />\n                <ErrorMessage name=\"email\" component={ErrorMessages} />\n                </ErrorWrapper>\n\n                <ErrorWrapper>\n                <Input placeholder=\"Password\" type=\"password\" name=\"password\" />\n                <ErrorMessage name=\"password\" component={ErrorMessages} />\n                </ErrorWrapper>\n\n                <ErrorWrapper>\n                <Input\n                  placeholder=\"Confirm Password\"\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                />\n                <ErrorMessage name=\"confirmPassword\" component={ErrorMessages} />\n                </ErrorWrapper>\n\n                <AccentButton type=\"submit\">Next</AccentButton>\n                </>  \n                :\n                (<>\n                <ErrorWrapper>\n                <Input placeholder=\"Name\" type=\"text\" name=\"name\" />\n                <ErrorMessage name=\"name\" component={ErrorMessages} id='1'/>\n                </ErrorWrapper> \n\n                <ErrorWrapper>\n                <Input placeholder=\"City, region\" type=\"text\" name=\"city\"/>\n                <ErrorMessage name=\"city\" component={ErrorMessages}  id='2' />\n                </ErrorWrapper>\n\n                <ErrorWrapper>\n                <Input placeholder=\"Mobile phone\" type=\"tel\" name=\"phone\" />\n                <ErrorMessage name=\"phone\" component={ErrorMessages} id='3' />\n                </ErrorWrapper>\n\n                <AccentButton type=\"submit\">Register</AccentButton>\n                <TransparentButton type=\"button\" onClick={() => setStep(0)}>Back</TransparentButton>\n                </>)\n                }\n                <RedirectLink />\n              </AuthForm>\n            </Formik>\n\n        </Wrapper>\n  );\n};\n","import { RegisterForm } from 'components/RegLog/RegisterPage/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["AuthForm","styled","Form","theme","Title","title","children","autoComplete","AccentButton","TransparentButton","props","Input","Field","type","Wrapper","RedirectLink","Link","TextBeforeLink","ErrorWrapper","Border","Dagger","ErrorMessages","src","require","bgMobile","bgTablet","bgDesktop","to","FisrtStepShema","object","shape","email","string","required","matches","password","min","max","confirmPassword","oneOf","ref","SecondStepShema","name","phone","city","initialValues","RegisterForm","error","useAuth","dispatch","useDispatch","useState","step","setStep","useEffect","toast","onSubmit","values","resetForm","registerNewUser","validationSchema","validateOnChange","validateOnBlur","I","placeholder","component","id","onClick"],"sourceRoot":""}