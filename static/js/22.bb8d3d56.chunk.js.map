{"version":3,"file":"static/js/22.bb8d3d56.chunk.js","mappings":"uJAQA,IAJe,SAAC,GAAoB,IAAD,IAAjBA,KAAAA,OAAiB,MAAV,IAAU,EACjC,OAAO,SAAC,IAAD,CAAYA,KAAMA,EAAMC,MAAM,QACtC,C,uMCHYC,EAAcC,EAAAA,GAAAA,GAAH,8TAIDC,EAAAA,EAAAA,MAAAA,OAMAA,EAAAA,EAAAA,MAAAA,S,UCVVC,EAAcF,EAAAA,GAAAA,IAAH,oQAYXG,EAAoBH,EAAAA,GAAAA,IAAH,oHAOjBI,EAAaJ,EAAAA,GAAAA,EAAH,uFACNC,EAAAA,EAAAA,YAAAA,OACFA,EAAAA,EAAAA,UAAAA,IAKFI,EAAmBL,EAAAA,GAAAA,OAAH,geASdC,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,YAAAA,OACNA,EAAAA,EAAAA,OAAAA,MACMA,EAAAA,EAAAA,YAAAA,QAIJA,EAAAA,EAAAA,OAAAA,OAIAA,EAAAA,EAAAA,OAAAA,OAGUA,EAAAA,EAAAA,MAAAA,OACNA,EAAAA,EAAAA,UAAAA,EAIMA,EAAAA,EAAAA,MAAAA,QACNA,EAAAA,EAAAA,UAAAA,GAKJK,EAAuBN,EAAAA,GAAAA,IAAH,yCAIpBO,EAAeP,EAAAA,GAAAA,EAAH,mGACVC,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,YAAAA,OACNA,EAAAA,EAAAA,OAAAA,cACMA,EAAAA,EAAAA,YAAAA,S,UC3DJO,EAAW,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACzB,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgDF,EAAAA,EAAAA,WAAS,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KAIMC,GAAkB,IAAIC,MAAOC,SAOnC,OACE,+BACE,SAAC,IAAD,CACEC,SACE,SAAChB,EAAD,UACGO,GAAYA,EAASU,OAAS,EAbpB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAcjCC,KAAI,SAACC,EAAKC,GAAN,aACf,UAACnB,EAAD,YACE,0BACE,SAACC,EAAD,UAAaiB,OAEf,0BACE,SAACjB,EAAD,UACG,UAAAK,EAASa,UAAT,SAAiBX,OAAjB,UACMF,EAASa,GAAOC,KADtB,cACgCd,EAASa,GAAOE,IAC7C,eARcF,EADT,KAejB,SAAChB,EAAD,WACE,SAACC,EAAD,yGAQRkB,gBAAgB,QAChBd,OAAQA,EACRe,cAAe,SAAAC,GAAa,OArCR,SAAAA,GACxBf,EAAUe,GACVb,EAAoBa,EACrB,CAkCqCC,CAAkBD,EAAtB,EAC5BE,UAAU,eA/BZ,UAiCE,SAACxB,EAAD,CACEyB,KAAK,SACLC,UAAWlB,GAAoBF,EAAS,SAAW,GAFrD,SAIgB,OAAbF,GAAyC,IAApBA,EAASU,OAC3B,gBACA,UAAAV,EAASM,UAAT,SAA2BJ,OAA3B,UACGF,EAASM,GAAiBQ,KAD7B,cACuCd,EAASM,GAAiBS,IACjE,cAKb,ECtEYQ,EAAchC,EAAAA,GAAAA,GAAH,gdACFC,EAAAA,EAAAA,OAAAA,eAKCA,EAAAA,EAAAA,MAAAA,OAUAA,EAAAA,EAAAA,MAAAA,OAQAA,EAAAA,EAAAA,MAAAA,SAKVgC,EAAiBjC,EAAAA,GAAAA,IAAH,uLAIJC,EAAAA,EAAAA,MAAAA,OAIAA,EAAAA,EAAAA,MAAAA,SAKViC,EAAelC,EAAAA,GAAAA,GAAH,6RAGdC,EAAAA,EAAAA,OAAAA,OACIA,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,YAAAA,KAEMA,EAAAA,EAAAA,MAAAA,OACNA,EAAAA,EAAAA,UAAAA,EAIMA,EAAAA,EAAAA,MAAAA,QACNA,EAAAA,EAAAA,UAAAA,IAKJkC,EAAuBnC,EAAAA,GAAAA,EAAH,qEAEtBC,EAAAA,EAAAA,OAAAA,QAGEmC,EAAwBpC,EAAAA,GAAAA,EAAH,iHAEvBC,EAAAA,EAAAA,OAAAA,UAIEA,EAAAA,EAAAA,OAAAA,QAIAoC,EAAiBrC,EAAAA,GAAAA,KAAH,sHAEhBC,EAAAA,EAAAA,OAAAA,cAIEA,EAAAA,EAAAA,OAAAA,QAIAqC,EAAatC,EAAAA,GAAAA,GAAH,4bACRC,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,YAAAA,OACNA,EAAAA,EAAAA,OAAAA,cACMA,EAAAA,EAAAA,YAAAA,QAMMA,EAAAA,EAAAA,MAAAA,OACNA,EAAAA,EAAAA,UAAAA,EAQMA,EAAAA,EAAAA,MAAAA,QACNA,EAAAA,EAAAA,UAAAA,GASJsC,EAAqBvC,EAAAA,GAAAA,IAAH,wKAGRC,EAAAA,EAAAA,MAAAA,OAIAA,EAAAA,EAAAA,MAAAA,SAKVuC,EAAaxC,EAAAA,GAAAA,IAAH,uMAKAC,EAAAA,EAAAA,MAAAA,OAIAA,EAAAA,EAAAA,MAAAA,SC5HVwC,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,8BACGA,EAAQtB,KACP,gBACEuB,EADF,EACEA,IACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,IACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,QACAC,EANF,EAMEA,SACAvC,EAPF,EAOEA,SACAwC,EARF,EAQEA,MACAC,EATF,EASEA,MATF,OAWE,UAAClB,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAsBgB,KAAMN,EAAKO,OAAO,SAASC,IAAI,aAArD,SACGT,OAGL,UAACX,EAAD,YACE,SAACM,EAAD,WACE,SAACC,EAAD,CACEc,IACEN,GAEI,uEAENO,IAAKX,OAGT,4BACE,UAACN,EAAD,oBAEE,mBACA,SAAC9B,EAAD,CAAUC,SAAUA,QAGtB,UAAC6B,EAAD,uBAEE,mBACA,cAAGa,KAAML,EAAYM,OAAO,SAASC,IAAI,aAAzC,SACGN,GACC,SAACV,EAAD,UAAiBU,KAEjB,wBAIN,UAACT,EAAD,CAAYR,KAAK,QAAjB,oBAEE,kBACCoB,GACC,SAACd,EAAD,CAAuBe,KAAI,iBAAYJ,GAAvC,SACGG,KAGH,sBAGJ,UAACZ,EAAD,CAAYR,KAAK,QAAjB,oBAEE,kBACCmB,GACC,SAACb,EAAD,CAAuBe,KAAI,cAASF,GAApC,SACGA,KAGH,6BAtDQN,EAXpB,KA2EP,EC1FYa,EAAa,SAAC,GAAiB,IAAfd,EAAc,EAAdA,QAC3B,OAAKe,MAAMC,QAAQhB,IAKjB,SAAC3C,EAAD,WACE,SAAC0C,EAAD,CAAMC,QAASA,MALV,IAQV,ECVYiB,EAAkB3D,EAAAA,GAAAA,QAAH,0MAKLC,EAAAA,EAAAA,MAAAA,OAKAA,EAAAA,EAAAA,MAAAA,SAMViC,EAAelC,EAAAA,GAAAA,GAAH,+VAEVC,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,YAAAA,KACAA,EAAAA,EAAAA,YAAAA,QAIMA,EAAAA,EAAAA,MAAAA,OACNA,EAAAA,EAAAA,UAAAA,IAMMA,EAAAA,EAAAA,MAAAA,QACNA,EAAAA,EAAAA,UAAAA,KAOJ2D,GAAkB5D,EAAAA,GAAAA,IAAH,iH,WCD5B,GAjCuB,WACrB,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOgC,EAAP,KAAgBmB,EAAhB,KACA,GAAkCnD,EAAAA,EAAAA,WAAS,GAA3C,eAAOoD,EAAP,KAAkBC,EAAlB,KAiBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAG2BE,EAAAA,EAAAA,MAH3B,OAGUC,EAHV,OAIIL,EAAWK,GAJf,yEAOIH,GAAa,GAPjB,6EADc,uBAAC,WAAD,wBAWdI,EACD,GAAE,KAGD,UAACR,EAAD,YACE,SAAC,EAAD,0BACCG,GACC,SAACF,GAAD,WACE,SAAC,KAAD,OAGF,SAACJ,EAAD,CAAYd,QAASA,MAI5B,C,6PCrCY0B,EAAa,mCAAG,WAAMC,GAAN,uFACJC,EAAAA,EAAAA,IAAA,uBAAkC,CACvDC,QAAS,CACPC,cAAc,UAAD,OAAYH,MAHF,cACrBH,EADqB,yBAOpBA,EAASO,KAAKC,MAPM,2CAAH,sDAUbC,EAAc,mCAAG,WAAON,EAAOO,GAAd,uFACLN,EAAAA,EAAAA,MAAA,sBAAmCM,EAAa,CACrEL,QAAS,CACPC,cAAc,UAAD,OAAYH,MAHD,cACtBH,EADsB,yBAOrBA,EAASO,KAAKC,MAPO,2CAAH,wDAUdG,EAAW,mCAAG,WAAMR,GAAN,uFACFC,EAAAA,EAAAA,IAAA,uBAAkC,CACvDC,QAAS,CACPC,cAAc,UAAD,OAAYH,MAHJ,cACnBH,EADmB,yBAOlBA,EAASO,MAPS,2CAAH,sDAUXK,EAAc,mCAAG,WAAOT,EAAOO,EAAaG,GAA3B,uFACLT,EAAAA,EAAAA,KAAA,2BAGnBS,MAAAA,GACGH,GAEL,CACEL,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAAD,OAAYH,MAVH,cACtBH,EADsB,yBAerBA,EAASO,MAfY,2CAAH,0DAkBdO,EAAc,mCAAG,WAAOX,EAAOY,GAAd,uFACLX,EAAAA,EAAAA,OAAA,mBAAyBW,GAAM,CACpDV,QAAS,CACPC,cAAc,UAAD,OAAYH,MAHD,cACtBH,EADsB,yBAOrBA,EAASO,MAPY,2CAAH,wDAUdR,EAAU,mCAAG,oGACDK,EAAAA,EAAAA,IAAU,YADT,cAClBJ,EADkB,yBAGjBA,EAASO,MAHQ,2CAAH,qDAMVS,EAAY,mCAAG,WAAOb,EAAOc,GAAd,uFACHb,EAAAA,EAAAA,MAAA,mBAErB,CACES,MAAOI,GAET,CACEZ,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAAD,OAAYH,MATL,cACpBH,EADoB,yBAcnBA,EAASO,MAdU,2CAAH,uD","sources":["components/loader/loader.jsx","components/OurFriends/OurFriends.styled.js","components/OurFriends/WorkDays/WorkTime.styled.js","components/OurFriends/WorkDays/WorkTime.jsx","components/OurFriends/Card/Card.styled.js","components/OurFriends/Card/Card.jsx","components/OurFriends/OurFriends.jsx","pages/OurFriendsPage/OurFriendsPage.styled.js","pages/OurFriendsPage/OurFriendsPage.jsx","utils/api/getUserData.js"],"sourcesContent":["import React from 'react';\n\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst Loader = ({ size = 100 }) => {\n  return <ClipLoader size={size} color=\"#000\" />;\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { theme } from '../../theme';\n\nexport const FriendsList = styled.ul`\n  margin: 0 auto;\n  justify-content: center;\n\n  @media screen and (${theme.media.tablet}) {\n    display: grid;\n    grid-template-columns: repeat(2, 336px);\n    grid-gap: 32px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    display: grid;\n    grid-template-columns: repeat(3, 395px);\n    grid-gap: 32px;\n\n  }\n`;\n\n","import styled from 'styled-components';\nimport { theme } from '../../../theme';\n\nexport const ScheduleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background-color: #ffffff;\n  border: 1px solid #f59256;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  padding: 12px;\n  margin-top: -15px;\n`;\n\nexport const ScheduleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-right: 12px;\n`;\n\nexport const WorkingDay = styled.p`\n  font-weight: ${theme.fontWeights.middle};\n  font-size: ${theme.fontSizes.xs};\n  line-height: 1.33;\n\n`;\n\nexport const CurrentDayButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.middle};\n  color: ${theme.colors.black};\n  line-height: ${theme.lineHeights.heading};\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n\n  &.active {\n    color: ${theme.colors.accent};\n  }\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.38;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.3;\n  }\n`;\n\nexport const AltScheduleContainer = styled.div`\n  width: 120px;\n`;\n\nexport const Notification = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.middle};\n  color: ${theme.colors.secondaryText};\n  line-height: ${theme.lineHeights.heading};\n`;\n","import { useState } from 'react';\nimport { Popover2 } from '@blueprintjs/popover2';\n\nimport {\n  ScheduleBox,\n  CurrentDayButton,\n  WorkingDay,\n  ScheduleContainer,\n  AltScheduleContainer,\n  Notification,\n} from './WorkTime.styled';\n\nexport const WorkTime = ({ workDays }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isPopoverClicked, setIsPopoverClicked] = useState(false);\n\n\n  const DAYS_OF_WEEK = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  const currentDayIndex = new Date().getDay();\n\n  const handleInteraction = nextOpenState => {\n    setIsOpen(nextOpenState);\n    setIsPopoverClicked(nextOpenState);\n  };\n\n  return (\n    <>\n      <Popover2\n        content={\n          <ScheduleBox>\n            {workDays && workDays.length > 0 ? (\n              DAYS_OF_WEEK.map((day, index) => (\n                <ScheduleContainer key={index}>\n                  <div>\n                    <WorkingDay>{day}</WorkingDay>\n                  </div>\n                  <div>\n                    <WorkingDay>\n                      {workDays[index]?.isOpen\n                        ? `${workDays[index].from} - ${workDays[index].to}`\n                        : 'Closed'}\n                    </WorkingDay>\n                  </div>\n                </ScheduleContainer>\n              ))\n            ) : (\n              <AltScheduleContainer>\n                <Notification>\n                  We have flexible working schedule. Feel free to contact us any\n                  time by email or phone.\n                </Notification>\n              </AltScheduleContainer>\n            )}\n          </ScheduleBox>\n        }\n        interactionKind=\"click\"\n        isOpen={isOpen}\n        onInteraction={nextOpenState => handleInteraction(nextOpenState)}\n        placement=\"bottom-start\"\n      >\n        <CurrentDayButton\n          type=\"button\"\n          className={isPopoverClicked && isOpen ? 'active' : ''}\n        >\n          {workDays === null || workDays.length === 0\n            ? 'Free schedule'\n            : workDays[currentDayIndex]?.isOpen\n            ? `${workDays[currentDayIndex].from} - ${workDays[currentDayIndex].to}`\n            : 'Closed'}\n        </CurrentDayButton>\n      </Popover2>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../theme';\n\nexport const FriendsItem = styled.li`\n  background-color: ${theme.colors.itemBackground};\n  border-radius: 20px;\n\n  transition: transform 0.3s ease-in-out 0s;\n\n  @media screen and (${theme.media.mobile}) {\n    width: 280px;\n    margin-left: auto;\n    margin-right: auto;\n\n    &:not(:last-child) {\n      margin-bottom: 12px;\n    }\n  }\n\n  @media screen and (${theme.media.tablet}) {\n    width: 336px;\n\n    &:nth-last-child(-n + 2) {\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    width: 395px;\n  }\n`;\n\nexport const FriendsWrapper = styled.div`\n  display: flex;\n  padding: 10px 4px;\n\n  @media screen and (${theme.media.tablet}) {\n    padding: 16px 4px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    padding: 16px 4px;\n  }\n`;\n\nexport const FriendsTitle = styled.h3`\n  padding-top: 14px;\n  text-align: center;\n  color: ${theme.colors.accent};\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.bold};\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.38;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.mx};\n    line-height: 1.35;\n  }\n`;\n\nexport const FriendsLinkToAddress = styled.a`\n  text-decoration: underline;\n  color: ${theme.colors.accent};\n`;\n\nexport const FriendsLinkToContacts = styled.a`\n  text-decoration: none;\n  color: ${theme.colors.primeText};\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const FriendsAddress = styled.span`\n  text-decoration: underline;\n  color: ${theme.colors.secondaryText};\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const FriendsPar = styled.h4`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.middle};\n  color: ${theme.colors.secondaryText};\n  line-height: ${theme.lineHeights.heading};\n\n  &:not(:last-child) {\n    padding-bottom: 4px;\n  }\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.38;\n\n    &:not(:last-child) {\n      padding-bottom: 8px;\n    }\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.3;\n\n    &:not(:last-child) {\n      padding-bottom: 12px;\n    }\n  }\n`;\n\nexport const FriendsLogoWrapper = styled.div`\n  margin-right: 12px;\n\n  @media screen and (${theme.media.tablet}) {\n    margin-right: 14px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    margin-right: 16px;\n  }\n`;\n\nexport const FriendsImg = styled.img`\n  object-fit: cover;\n  max-width: fit-content;\n  width: 110px;\n\n  @media screen and (${theme.media.tablet}) {\n    width: 120px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    width: 158px;\n  }\n`;\n","import { WorkTime } from '../WorkDays/WorkTime';\n\nimport {\n  FriendsItem,\n  FriendsTitle,\n  FriendsLinkToAddress,\n  FriendsLinkToContacts,\n  FriendsPar,\n  FriendsWrapper,\n  FriendsLogoWrapper,\n  FriendsImg,\n  FriendsAddress,\n} from './Card.styled';\n\nexport const Card = ({ friends }) => {\n  return (\n    <>\n      {friends.map(\n        ({\n          _id,\n          title,\n          url,\n          addressUrl,\n          address,\n          imageUrl,\n          workDays,\n          phone,\n          email,\n        }) => (\n          <FriendsItem key={_id}>\n            <FriendsTitle>\n              <FriendsLinkToAddress href={url} target=\"_blank\" rel=\"noreferrer\">\n                {title}\n              </FriendsLinkToAddress>\n            </FriendsTitle>\n            <FriendsWrapper>\n              <FriendsLogoWrapper>\n                <FriendsImg\n                  src={\n                    imageUrl\n                      ? imageUrl\n                      : 'https://animals-city.org/wp-content/themes/animals-city/img/logo.svg'\n                  }\n                  alt={title}\n                />\n              </FriendsLogoWrapper>\n              <div>\n                <FriendsPar>\n                  Time:\n                  <br />\n                  <WorkTime workDays={workDays} />\n                </FriendsPar>\n\n                <FriendsPar>\n                  Address:\n                  <br />\n                  <a href={addressUrl} target=\"_blank\" rel=\"noreferrer\">\n                    {address ? (\n                      <FriendsAddress>{address}</FriendsAddress>\n                    ) : (\n                      <hr />\n                    )}\n                  </a>\n                </FriendsPar>\n                <FriendsPar type=\"email\">\n                  Email:\n                  <br />\n                  {email ? (\n                    <FriendsLinkToContacts href={`mailto:${address}`}>\n                      {email}\n                    </FriendsLinkToContacts>\n                  ) : (\n                    <hr />\n                  )}\n                </FriendsPar>\n                <FriendsPar type=\"phone\">\n                  Phone:\n                  <br />\n                  {phone ? (\n                    <FriendsLinkToContacts href={`tel:${phone}`}>\n                      {phone}\n                    </FriendsLinkToContacts>\n                  ) : (\n                    <hr />\n                  )}\n                </FriendsPar>\n              </div>\n            </FriendsWrapper>\n          </FriendsItem>\n        )\n      )}\n    </>\n  );\n};\n","import { FriendsList } from './OurFriends.styled';\nimport { Card } from './Card/Card';\n\nexport const OurFriends = ({ friends }) => {\n  if (!Array.isArray(friends)) {\n    return null;\n  }\n\n  return (\n    <FriendsList>\n      <Card friends={friends} />\n    </FriendsList>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../theme';\n\nexport const FriendsPageBody = styled.section`\n  margin-bottom: 100px;\n  margin-top: 40px;\n  \n\n  @media screen and (${theme.media.tablet}) {\n    margin-top: 90px;\n    \n  }\n\n  @media screen and (${theme.media.desktop}) {\n    margin-top: 60px;\n   \n  }\n`;\n\nexport const FriendsTitle = styled.h1`\n  text-align: center;\n  font-size: ${theme.fontSizes.ml};\n  font-weight: ${theme.fontWeights.bold};\n  line-height: ${theme.lineHeights.heading};\n\n  margin-bottom: 28px;\n\n  @media screen and (${theme.media.tablet}) {\n    font-size: ${theme.fontSizes.xxm};\n    line-height: 1.38;\n\n    margin-bottom: 40px;\n  }\n\n  @media screen and (${theme.media.desktop}) {\n    font-size: ${theme.fontSizes.xxm};\n    line-height: 1.38;\n\n    margin-bottom: 60px;\n  }\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n\n`;\n","import { useEffect, useState } from 'react';\nimport { getFriends } from '../../utils/api/getUserData';\nimport { OurFriends } from '../../components/OurFriends/OurFriends';\nimport { FriendsPageBody, FriendsTitle } from './OurFriendsPage.styled';\n\nimport Loader from '../../components/loader/loader';\nimport { LoaderContainer } from './OurFriendsPage.styled';\n\nconst OurFriendsPage = () => {\n  const [friends, setFriends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setIsLoading(true);\n        const response = await getFriends();\n        setFriends(response);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetch();\n  }, []);\n\n  return (\n    <FriendsPageBody>\n      <FriendsTitle>Our Friends</FriendsTitle>\n      {isLoading ? (\n        <LoaderContainer>\n          <Loader />\n        </LoaderContainer>\n      ) : (\n        <OurFriends friends={friends} />\n      )}\n    </FriendsPageBody>\n  );\n};\n\nexport default OurFriendsPage;\n","import axios from 'axios';\n\nexport const fetchUserData = async token => {\n  const response = await axios.get(`api/auth/currentUser`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data.user;\n};\n\nexport const updateUserData = async (token, credentials) => {\n  const response = await axios.patch(`api/auth/updateUser`, credentials, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data.user;\n};\n\nexport const getUserPets = async token => {\n  const response = await axios.get(`api/pets/allUserPets`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data;\n};\n\nexport const createUserPets = async (token, credentials, image) => {\n  const response = await axios.post(\n    `api/pets/create`,\n    {\n      image,\n      ...credentials,\n    },\n    {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${token}`,\n      },\n    }\n  );\n\n  return response.data;\n};\n\nexport const removeUserPets = async (token, id) => {\n  const response = await axios.delete(`api/pets/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFriends = async () => {\n  const response = await axios.get('/friends');\n\n  return response.data;\n};\n\nexport const updateAvatar = async (token, avatar) => {\n  const response = await axios.patch(\n    `api/auth/avatars`,\n    {\n      image: avatar,\n    },\n    {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${token}`,\n      },\n    }\n  );\n\n  return response.data;\n};\n"],"names":["size","color","FriendsList","styled","theme","ScheduleBox","ScheduleContainer","WorkingDay","CurrentDayButton","AltScheduleContainer","Notification","WorkTime","workDays","useState","isOpen","setIsOpen","isPopoverClicked","setIsPopoverClicked","currentDayIndex","Date","getDay","content","length","map","day","index","from","to","interactionKind","onInteraction","nextOpenState","handleInteraction","placement","type","className","FriendsItem","FriendsWrapper","FriendsTitle","FriendsLinkToAddress","FriendsLinkToContacts","FriendsAddress","FriendsPar","FriendsLogoWrapper","FriendsImg","Card","friends","_id","title","url","addressUrl","address","imageUrl","phone","email","href","target","rel","src","alt","OurFriends","Array","isArray","FriendsPageBody","LoaderContainer","setFriends","isLoading","setIsLoading","useEffect","getFriends","response","fetch","fetchUserData","token","axios","headers","Authorization","data","user","updateUserData","credentials","getUserPets","createUserPets","image","removeUserPets","id","updateAvatar","avatar"],"sourceRoot":""}