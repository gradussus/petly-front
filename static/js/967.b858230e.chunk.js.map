{"version":3,"file":"static/js/967.b858230e.chunk.js","mappings":"8LAIaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,siBAaJE,EAAAA,EAAAA,MAAAA,MASCA,EAAAA,EAAAA,OAAAA,OAaLC,EAAQH,EAAAA,GAAAA,GAAH,mJAGHE,EAAAA,EAAAA,MAAAA,KACAA,EAAAA,EAAAA,YAAAA,OACFA,EAAAA,EAAAA,UAAAA,G,UC1CAH,EAAW,SAAC,GAAuB,IAAtBK,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAE7B,OACE,UAAC,EAAD,CAAaC,aAAa,MAA1B,WACA,SAAC,EAAD,UAAWF,IACRC,IAGN,C,8GCNUE,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sOAKCE,EAAAA,EAAAA,MAAAA,MAGPA,EAAAA,EAAAA,QAAAA,OACIA,EAAAA,EAAAA,OAAAA,WACLA,EAAAA,EAAAA,OAAAA,W,UCZEK,EAAQ,SAACE,GACpB,OAAO,SAAC,GAAD,QAAUC,KAAK,QAAWD,GAClC,C,yJCAYE,EAAUX,EAAAA,GAAAA,IAAH,8DAKPY,GAAeZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,yGAEfE,EAAAA,EAAAA,OAAAA,UAGIA,EAAAA,EAAAA,OAAAA,QAGDY,EAAiBd,EAAAA,GAAAA,EAAH,2DAEjBE,EAAAA,EAAAA,OAAAA,K,gFCjBGa,E,QAAgBf,GAAAA,IAAH,kQ,UCAbe,EAAgB,SAACN,GAC5B,OAAO,SAAC,GAAD,UAAuBA,GAC/B,C,+HCEYO,EAAehB,EAAAA,GAAAA,IAAH,sNACRE,EAAAA,EAAAA,YAAAA,KACFA,EAAAA,EAAAA,UAAAA,GAEIA,EAAAA,EAAAA,MAAAA,MAEPA,EAAAA,EAAAA,QAAAA,MACIA,EAAAA,EAAAA,OAAAA,OACLA,EAAAA,EAAAA,OAAAA,O,IAOsBF,EAAAA,EAAAA,IAAOgB,EAAPhB,CAAH,+EACdE,EAAAA,EAAAA,OAAAA,WACLA,EAAAA,EAAAA,OAAAA,QAIYF,EAAAA,EAAAA,IAAOgB,EAAPhB,CAAH,sB,SCzBPgB,EAAe,SAACP,GAC3B,OAAO,SAAC,GAAD,UAAsBA,GAC9B,E,oBCFYG,EAAe,WAC1B,OAAO,UAAC,KAAD,YACP,SAAC,KAAD,sCACA,SAAC,KAAD,CAAiBK,GAAG,YAApB,wBAED,E,8BCDYC,GAAkBC,EAAAA,EAAAA,MAASC,MAAM,CAC5CC,OAAOC,EAAAA,EAAAA,MACNC,SAAS,2BACTC,QAND,uEAQE,uCAEFC,UACAH,EAAAA,EAAAA,MACCC,SAAS,8BACTG,IAAI,GACJC,IAAI,IACJH,QAdoB,2CAgBnB,qDCXEI,EAAgB,CACpBP,MAAO,sBACPI,SAAU,cAGCI,EAAY,WAEvB,IAAMC,EAAe,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAG7BC,QAAQC,IAAIH,GACZC,GACA,EAEE,OACE,SAAC,KAAD,CAAQJ,cAAeA,EAAeO,SAAUL,EAAcM,iBAAkBlB,EAAhF,UACE,UAACnB,EAAA,EAAD,CAAUK,MAAM,QAAQ+B,SAAUL,EAAlC,WACI,SAACvB,EAAA8B,EAAD,CAAOC,YAAY,QAAQ5B,KAAK,QAAQ6B,KAAK,WAC7C,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAWzB,EAAAA,KAEtC,SAACR,EAAA8B,EAAD,CAAOC,YAAY,WAAW5B,KAAK,WAAW6B,KAAK,cACnD,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAWzB,EAAAA,KAEzC,SAACC,EAAD,CAAcN,KAAK,SAAnB,oBACA,SAACE,EAAD,QAIT,EC/BL,EAJkB,WAChB,OAAO,SAACiB,EAAD,GACR,C","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthForm.jsx","components/LoginPage/Input/Input.styled.js","components/LoginPage/Input/Input.jsx","components/LoginPage/RedirectLink/RedirectLink.styled.js","components/RegisterPage/ErrorMessages/ErrorMessages.styled.js","components/RegisterPage/ErrorMessages/ErrorMessages.jsx","components/LoginPage/Buttons/Buttons.styled.js","components/LoginPage/Buttons/Buttons.jsx","components/LoginPage/RedirectLink/RedirectLink.jsx","components/LoginPage/Shema.js","components/LoginPage/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../theme'\nimport { Form } from 'formik';\n\nexport const AuthForm = styled(Form)`\n\nmargin-left:auto;\nmargin-right:auto;\nmargin-top: 12px;\n\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n\npadding: 0px;\nborder-radius: ${theme.radii.large};\nbackground: transparent;\n\ntext-align: center;\n\n@media screen and (min-width: 768px){\npadding: 60px 80px;\n\n    margin-top: 134px;\n    background: ${theme.colors.white};\n    width: 608px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n}\n\n@media screen and (min-width: 1280px){\n    margin-top: 60px;\n    width: 620px;\n\n}\n\n `;\n\nexport const Title = styled.h3`\nmargin-bottom: 40px;\n\nfont-family: ${theme.fonts.body};\nfont-weight: ${theme.fontWeights.middle};\nfont-size: ${theme.fontSizes.l};\nline-height: 49px;\nletter-spacing: 0.04em;\n`","import * as SC from './AuthForm.styled';\n\nexport const AuthForm = ({title, children}) => {\n\n    return (\n      <SC.AuthForm autoComplete='off'>\n      <SC.Title>{title}</SC.Title>\n        {children}\n      </SC.AuthForm>\n    );\n  };\n  ","import styled from 'styled-components';\nimport { theme } from '../../../theme'\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  box-sizing: border-box;\n  margin-left:auto;\n  margin-right:auto;\n  border-radius: ${theme.radii.large};\n  margin-bottom: 40px;\n  padding: 12px 32px;\n  border: ${theme.borders.normal};\n  background: ${theme.colors.background};\n  color: ${theme.colors.primeText};\n`;","import * as SC from './Input.styled';\n\nexport const Input = (props) => {\n  return <SC.Input type=\"text\" {...props} />;\n};","import styled from 'styled-components';\nimport { theme } from '../../../theme'\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display:flex;\n  margin-top: 40px;\n`\n\nexport const RedirectLink = styled(Link)`\n  text-decoration: underline;\n  color:${theme.colors.secondary};\n  \n  &:hover{\n    color:  ${theme.colors.accent};\n}\n` \nexport const TextBeforeLink = styled.p`\n  margin-right: 5px;\n  color:${theme.colors.grey};\n`","import styled from 'styled-components';\n\nexport const ErrorMessages = styled.div`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    color: #E2001A;\n\n    position: relative;\n    top: -35px;\n    right: -20px;\n    margin-right: auto;\n\n`\n","import * as SC from './ErrorMessages.styled';\n\nexport const ErrorMessages = (props) => {\n  return <SC.ErrorMessages  {...props} />;\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../theme'\n\n// import { Button } from \"@mui/material\";\n\n\nexport const AccentButton = styled.div`\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.mx};\n  width: 100%;\n  border-radius: ${theme.radii.large};\n  padding: 10px;\n  border: ${theme.borders.large};\n  background: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  &:hover{\n    cursor: pointer;\n  }\n  \n`;\n\nexport const TransparentButton = styled(AccentButton)`\n  background: ${theme.colors.background};\n  color: ${theme.colors.black};\n  margin-top: 16px;\n`;\n\nexport const NextBtn = styled(AccentButton)``;","import * as SC from './Buttons.styled';\n\nexport const AccentButton = (props) => {\n  return <SC.AccentButton  {...props} />;\n};\n\nexport const TransparentButton = (props) => {\n    return <SC.TransparentButton {...props} />;\n  };\n\nexport const NextBtn = (props) => {\n  return <SC.NextBtn {...props}/>\n}","import * as SC from './RedirectLink.styled'\n\nexport const RedirectLink = () => {\n  return <SC.Wrapper>\n  <SC.TextBeforeLink>Don't have an account?</SC.TextBeforeLink>\n  <SC.RedirectLink to='/register'>Register</SC.RedirectLink>\n  </SC.Wrapper>\n};\n","import { object, string } from \"yup\";\n\nconst emailRegexp =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nconst passwordRegexp = /^[a-zA-Z0-9а-яА-Я]+$/;\n\nexport const LoginValidation = object().shape({\n  email: string()\n  .required(\"Please Enter your email\")\n  .matches(\n    emailRegexp,\n    \"Enter your email <example@mail.com>\"\n  ),\n  password:\n  string()\n  .required('Please Enter your password')\n  .min(7)\n  .max(32)\n  .matches(\n    passwordRegexp,\n    \"Password's length min 7, max 32, without spaces\"\n)});","import { Input } from './Input/Input'\nimport { AccentButton } from './Buttons/Buttons';\nimport { AuthForm }  from 'components/AuthForm/AuthForm';\nimport { RedirectLink } from 'components/LoginPage/RedirectLink/RedirectLink'\nimport { Formik, ErrorMessage } from 'formik';\nimport { ErrorMessages } from '../RegisterPage/ErrorMessages/ErrorMessages';\nimport { LoginValidation } from './Shema';\n\n\nconst initialValues = {\n  email: 'xlebushek@gmail.com',\n  password: 'AgSgfgnhh3',\n}\n\nexport const LoginForm = () => {\n\n  const handleSubmit = (values, {resetForm}) => {\n\n\n    console.log(values);;\n    resetForm();\n   };\n\n      return (\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={LoginValidation} >\n          <AuthForm title=\"Login\" onSubmit={handleSubmit}>\n              <Input placeholder=\"Email\" type=\"email\" name=\"email\" />\n              <ErrorMessage name='email' component={ErrorMessages}/>\n\n              <Input placeholder=\"Password\" type=\"password\" name=\"password\" />\n              <ErrorMessage name='password' component={ErrorMessages}/>\n\n              <AccentButton type='submit'>Login</AccentButton>\n              <RedirectLink/>\n          </AuthForm>\n        </Formik>\n      );\n    };\n","import { LoginForm } from 'components/LoginPage/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["AuthForm","styled","Form","theme","Title","title","children","autoComplete","Input","Field","props","type","Wrapper","RedirectLink","Link","TextBeforeLink","ErrorMessages","AccentButton","to","LoginValidation","object","shape","email","string","required","matches","password","min","max","initialValues","LoginForm","handleSubmit","values","resetForm","console","log","onSubmit","validationSchema","I","placeholder","name","component"],"sourceRoot":""}