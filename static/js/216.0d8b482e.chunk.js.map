{"version":3,"file":"static/js/216.0d8b482e.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthForm.jsx","components/LoginPage/Input/Input.styled.js","components/LoginPage/Input/Input.jsx","components/LoginPage/RedirectLink/RedirectLink.styled.js","components/RegisterPage/ErrorMessages/ErrorMessages.styled.js","components/RegisterPage/ErrorMessages/ErrorMessages.jsx","components/RegisterPage/RedirectLink/RedirectLink.jsx","components/RegisterPage/stylesRegForm.js","components/RegisterPage/RegisterFormWrapper.jsx","components/RegisterPage/Shema.js","components/RegisterPage/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../theme'\nimport { Form } from 'formik';\n\nexport const AuthForm = styled(Form)`\n\nmargin-left:auto;\nmargin-right:auto;\nmargin-top: 12px;\n\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n\npadding: 0px;\nborder-radius: ${theme.radii.large};\nbackground: transparent;\n\ntext-align: center;\n\n@media screen and (min-width: 768px){\npadding: 60px 80px;\n\n    margin-top: 134px;\n    background: ${theme.colors.white};\n    width: 608px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n}\n\n@media screen and (min-width: 1280px){\n    margin-top: 60px;\n    width: 620px;\n\n}\n\n `;\n\nexport const Title = styled.h3`\nmargin-bottom: 40px;\n\nfont-family: ${theme.fonts.body};\nfont-weight: ${theme.fontWeights.middle};\nfont-size: ${theme.fontSizes.l};\nline-height: 49px;\nletter-spacing: 0.04em;\n`","import * as SC from './AuthForm.styled';\n\nexport const AuthForm = ({title, children}) => {\n\n    return (\n      <SC.AuthForm autoComplete='off'>\n      <SC.Title>{title}</SC.Title>\n        {children}\n      </SC.AuthForm>\n    );\n  };\n  ","import styled from 'styled-components';\nimport { theme } from '../../../theme'\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  box-sizing: border-box;\n  margin-left:auto;\n  margin-right:auto;\n  border-radius: ${theme.radii.large};\n  margin-bottom: 40px;\n  padding: 12px 32px;\n  border: ${theme.borders.normal};\n  background: ${theme.colors.background};\n  color: ${theme.colors.primeText};\n`;","import * as SC from './Input.styled';\n\nexport const Input = (props) => {\n  return <SC.Input type=\"text\" {...props} />;\n};","import styled from 'styled-components';\nimport { theme } from '../../../theme'\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display:flex;\n  margin-top: 40px;\n`\n\nexport const RedirectLink = styled(Link)`\n  text-decoration: underline;\n  color:${theme.colors.secondary};\n  \n  &:hover{\n    color:  ${theme.colors.accent};\n}\n` \nexport const TextBeforeLink = styled.p`\n  margin-right: 5px;\n  color:${theme.colors.grey};\n`","import styled from 'styled-components';\n\nexport const ErrorMessages = styled.div`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    color: #E2001A;\n\n    position: relative;\n    top: -35px;\n    right: -20px;\n    margin-right: auto;\n\n`\n","import * as SC from './ErrorMessages.styled';\n\nexport const ErrorMessages = (props) => {\n  return <SC.ErrorMessages  {...props} />;\n};\n","import * as SC from '../../LoginPage/RedirectLink/RedirectLink.styled'\n\nexport const RedirectLink = () => {\n    return <SC.Wrapper>\n    <SC.TextBeforeLink>Already have an account?</SC.TextBeforeLink>\n    <SC.RedirectLink to='/login'>Login</SC.RedirectLink>\n    </SC.Wrapper>\n  };","import { theme } from '../../theme';\n\n\nexport const BackBtn = {\n    fontWeight: theme.fontWeights.middle,\n    fontSize: theme.fontSizes.mx,\n    borderRadius: theme.radii.large,\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    border: theme.borders.large,\n    background: \"trasparent\",\n    color: theme.colors.black,\n    cursor: 'pointer',\n    textTransform: \"none\",\n    \"&:hover\": {\n      border: theme.borders.large,\n    },\n  }\n\n  export const nextBtn = {\n    fontWeight: theme.fontWeights.middle,\n    fontSize: theme.fontSizes.mx,\n    borderRadius: theme.radii.large,\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    border: theme.borders.large,\n    background: theme.colors.accent,\n    color: theme.colors.white,\n    textTransform: \"none\",\n    cursor: 'pointer',\n    \"&:hover\": {\n        background: theme.colors.accent,\n      border: theme.borders.large,\n    },\n  }\n\nexport const submitBtn = {\n    margiTop: \"16px\",\n    fontWeight: theme.fontWeights.middle,\n    fontSize: theme.fontSizes.mx,\n    borderRadius: theme.radii.large,\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    border: theme.borders.large,\n    background: theme.colors.accent,\n    color: theme.colors.white,\n    cursor: 'pointer',\n    textTransform: \"none\",\n\n    \"&:hover\": {\n      background:  theme.colors.accent,\n      border: theme.borders.large,\n    },\n  }","import { AuthForm }  from 'components/AuthForm/AuthForm';\nimport { RedirectLink } from 'components/RegisterPage/RedirectLink/RedirectLink';\nimport { useState } from 'react';\nimport React from \"react\";\nimport { Button, Stack } from \"@mui/material\";\nimport { submitBtn, nextBtn, BackBtn } from './stylesRegForm';\n\nexport const FormStepper = ({ children }) => {\n  const stepsArray = React.Children.toArray(children);\n  const [step, setStep] = useState(0);\n  const currentStep = stepsArray[step];\n\n  return (\n    <AuthForm title=\"Registration\">\n\n      {currentStep}\n      <Stack direction=\"column\" spacing={2} sx={{ marginTop: 0, width: \"100%\" }}>\n      {step === 1 && (\n          <Button variant=\"contained\" type=\"submit\"  sx={submitBtn}>\n            Register\n          </Button>\n        )}\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            step === 0 ? setStep(1) : setStep(0);\n          }}\n          sx={step === 0 ? nextBtn : BackBtn}\n        >\n          {step === 0 ? \"Next\" : \"Back\"}\n        </Button>\n       \n      </Stack>\n      <RedirectLink/>\n    </AuthForm>\n  );\n};","import { object, string, ref } from \"yup\";\n\nconst nameRegexp = /^[a-zA-Zа-яА-ЯіІїЇґҐ]+(?: [a-zA-Zа-яА-ЯіІїЇґҐ]+)*$/;\nconst emailRegexp =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nconst passwordRegexp = /^[a-zA-Z0-9а-яА-Я]+$/;\nconst phoneRegexp = /^\\+380\\d{9}$/;\nconst cityRegexp = /^[а-яёіїєА-ЯЁІЇЄA-Za-z]+,?\\s[а-яёіїєА-ЯЁІЇЄA-Za-z]+$/;\n\nexport const RegisterValidation = object().shape({\n    email: string()\n      .required(\"Please Enter your email\")\n      .matches(\n        emailRegexp,\n        \"Enter your email <example@mail.com>\"\n      ),\n    password:\n    string()\n    .required('Please Enter your password')\n    .min(7)\n    .max(32)\n    .matches(\n      passwordRegexp,\n      \"Password's length min 7, max 32, without spaces\"\n    ),\n    confirmPassword: string()\n    .required(\"Please confirm your password\")\n    .oneOf([ref(\"password\")], \"Passwords do not match\"),\n\n    name: string().required(\"Name is Required\").matches(\n        nameRegexp,\n        \"Please enter valid name\"\n      ),\n    phone:string()\n    .required('Phone is required')\n    .matches(\n      phoneRegexp,\n      'Enter in format \"+380XXXXXXXXX'\n    ),\n    city: string()\n    .required('City is required')\n    .matches(\n      cityRegexp,\n      'Enter your city, region'\n    ),\n\n  });\n\n\n\nexport const FisrtStepShema = object().shape({\n  email: string()\n    .required(\"Please Enter your email\")\n    .matches(\n      emailRegexp,\n      \"Enter your email <example@mail.com>\"\n    ),\n  password:\n  string()\n  .required('Please Enter your password')\n  .min(7)\n  .max(32)\n  .matches(\n    passwordRegexp,\n    \"Password's length min 7, max 32, without spaces\"\n  ),\n  confirmPassword: string()\n  .required(\"Please confirm your password\")\n  .oneOf([ref(\"password\")], \"Passwords do not match\"),\n\n});\n\nexport const SecondStepShema = object().shape({\n      name: string().required(\"Name is Required\").matches(\n          nameRegexp,\n          \"Please enter valid name\"\n        ),\n      phone:string()\n      .required('Phone is required')\n      .matches(\n        phoneRegexp,\n        'Enter in format \"+380XXXXXXXXX'\n      ),\n      city: string()\n      .required('City is required')\n      .matches(\n        cityRegexp,\n        'Enter your city, region'\n      )\n\n});\n\n// export const FisrtStepShema = object().shape({\n//       email: string()\n//         .required(\"Please Enter your email\")\n//         .matches(\n//           emailRegexp,\n//           \"Enter your email <example@mail.com>\"\n//         ),\n//       password:\n//       string()\n//       .required('Please Enter your password')\n//       .min(7)\n//       .max(32)\n//       .matches(\n//         passwordRegexp,\n//         \"Password's length min 7, max 32, without spaces\"\n//       ),\n//       confirmPassword: string()\n//       .required(\"Please confirm your password\")\n//       .oneOf([ref(\"password\")], \"Passwords do not match\"),\n      \n  \n//     });\n\n//   export const SecondStepShema = object.shape({\n//       name: string().required(\"Name is Required\").matches(\n//           nameRegexp,\n//           \"Please enter valid name\"\n//         ),\n//       phone:string()\n//       .required('Phone is required')\n//       .matches(\n//         phoneRegexp,\n//         'Enter in format \"+380XXXXXXXXX'\n//       ),\n//       city: string()\n//       .required('City is required')\n//       .matches(\n//         cityRegexp,\n//         'Enter your city, region'\n//       )\n//   })","import { FormStepper } from './RegisterFormWrapper';\nimport { Formik, ErrorMessage } from 'formik';\nimport { ErrorMessages } from './ErrorMessages/ErrorMessages';\nimport { RegisterValidation } from './Shema';\nimport { Input } from '../LoginPage/Input/Input';\nimport { useNavigate } from 'react-router-dom';\nimport { registerNewUser } from '../../redux/auth/operations';\nimport { useAuth } from '../../hooks/useAuth';\nimport { toast } from 'react-toastify';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  city: '',\n  phone: '+380',\n};\n\nexport const RegisterForm = () => {\n  const { error } = useAuth();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleRegistration = values => {\n    dispatch(\n      registerNewUser({\n        city: values.city,\n        email: values.email,\n        name: values.name,\n        password: values.password,\n        phone: values.phone,\n      })\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    handleRegistration(values);\n\n    navigate('/user');\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (error) toast.error(`${error}`, { theme: 'colored' });\n  }, [error]);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={RegisterValidation}\n    >\n      <FormStepper>\n        <>\n          <Input placeholder=\"Email\" type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component={ErrorMessages} />\n\n          <Input placeholder=\"Password\" type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component={ErrorMessages} />\n\n          <Input\n            placeholder=\"Confirm Password\"\n            type=\"password\"\n            name=\"confirmPassword\"\n          />\n          <ErrorMessage name=\"confirmPassword\" component={ErrorMessages} />\n        </>\n        <>\n          <Input placeholder=\"Name\" type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component={ErrorMessages} />\n\n          <Input placeholder=\"City, region\" type=\"text\" name=\"city\" />\n          <ErrorMessage name=\"city\" component={ErrorMessages} />\n\n          <Input placeholder=\"Mobile phone\" type=\"tel\" name=\"phone\" />\n          <ErrorMessage name=\"phone\" component={ErrorMessages} />\n        </>\n      </FormStepper>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterPage/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["AuthForm","styled","Form","theme","Title","title","children","autoComplete","Input","Field","props","type","Wrapper","RedirectLink","Link","TextBeforeLink","ErrorMessages","to","BackBtn","fontWeight","fontSize","borderRadius","paddingTop","paddingBottom","border","background","color","cursor","textTransform","nextBtn","submitBtn","margiTop","FormStepper","stepsArray","React","useState","step","setStep","currentStep","Stack","direction","spacing","sx","marginTop","width","Button","variant","onClick","nameRegexp","emailRegexp","passwordRegexp","phoneRegexp","cityRegexp","RegisterValidation","object","shape","email","string","required","matches","password","min","max","confirmPassword","oneOf","ref","name","phone","city","initialValues","RegisterForm","error","useAuth","dispatch","useDispatch","navigate","useNavigate","useEffect","toast","onSubmit","values","resetForm","registerNewUser","handleRegistration","validationSchema","I","placeholder","component"],"sourceRoot":""}